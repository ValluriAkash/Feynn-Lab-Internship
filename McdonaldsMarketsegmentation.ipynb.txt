{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "svk7Z-jNt_pC",
        "outputId": "66925418-d114-4748-f0f2-3d7fa2bbd180"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['yummy', 'convenient', 'spicy', 'fattening', 'greasy', 'fast', 'cheap', 'tasty', 'expensive', 'healthy', 'disgusting', 'Like', 'Age', 'VisitFrequency', 'Gender']\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "mcdonalds = pd.read_csv('mcdonalds.csv')\n",
        "\n",
        "column_names = mcdonalds.columns.tolist()\n",
        "print(column_names)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "\n",
        "mcdonalds = pd.read_csv('mcdonalds.csv')\n",
        "print(mcdonalds.shape)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "J-mExspfvfc8",
        "outputId": "c0b2b45a-7166-45f3-bd77-bee83cbf75a8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(1453, 15)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(mcdonalds.head(3))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TU9Z5quBvjg7",
        "outputId": "30884212-f48e-428c-f465-36e78ef8c2c8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "  yummy convenient spicy fattening greasy fast cheap tasty expensive healthy  \\\n",
            "0    No        Yes    No       Yes     No  Yes   Yes    No       Yes      No   \n",
            "1   Yes        Yes    No       Yes    Yes  Yes   Yes   Yes       Yes      No   \n",
            "2    No        Yes   Yes       Yes    Yes  Yes    No   Yes       Yes     Yes   \n",
            "\n",
            "  disgusting Like  Age      VisitFrequency  Gender  \n",
            "0         No   -3   61  Every three months  Female  \n",
            "1         No   +2   51  Every three months  Female  \n",
            "2         No   +1   62  Every three months  Female  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "MD_x = mcdonalds.iloc[:, 0:11].values\n",
        "MD_x = (MD_x == \"Yes\").astype(int)\n",
        "print(np.round(np.mean(MD_x, axis=0), 2))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "z6y-7JhivkHD",
        "outputId": "acd6acf2-632c-44a4-f6e3-ad9ab694076a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0.55 0.91 0.09 0.87 0.53 0.9  0.6  0.64 0.36 0.2  0.24]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.decomposition import PCA\n",
        "\n",
        "MD_pca = PCA().fit(MD_x)\n",
        "print(MD_pca.explained_variance_ratio_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Rb7vPGIiwQ0j",
        "outputId": "5d88aa78-e20b-4171-f0ed-8181a5a205f2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0.29944723 0.19279721 0.13304535 0.08309578 0.05948052 0.05029956\n",
            " 0.0438491  0.03954779 0.0367609  0.03235329 0.02932326]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(round(MD_x.pca, 1))\n"
      ],
      "metadata": {
        "id": "0ZisDy6ozxhU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "pca = PCA()\n",
        "MD_pca = pca.fit_transform(MD_x)\n",
        "plt.scatter(MD_pca[:, 0], MD_pca[:, 1], color=\"grey\")\n",
        "origin = pca.mean_\n",
        "components = pca.components_.T * pca.singular_values_\n",
        "for i in range(components.shape[0]):\n",
        "    plt.arrow(origin[0], origin[1], components[i, 0], components[i, 1], color='red', alpha=0.5)\n",
        "\n",
        "plt.xlabel('PC1')\n",
        "plt.ylabel('PC2')\n",
        "plt.title('PCA Scatter Plot')\n",
        "plt.show()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "8iKhZGC90fqU",
        "outputId": "260d56bc-eead-45e5-80bf-e3958db7e972"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "from sklearn.cluster import KMeans\n",
        "from sklearn.metrics import adjusted_rand_score\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "np.random.seed(1234)\n",
        "\n",
        "# Assuming data is your data matrix\n",
        "\n",
        "# Initialize variables\n",
        "num_segments = range(2, 9)\n",
        "n_rep = 10\n",
        "adjusted_rand_indices = []\n",
        "\n",
        "for k in num_segments:\n",
        "    rand_indices = []\n",
        "    for rep in range(n_rep):\n",
        "        kmeans = KMeans(n_clusters=k)\n",
        "        labels = kmeans.fit_predict(MD_x)\n",
        "\n",
        "        # Compute adjusted Rand index\n",
        "        rand_index = adjusted_rand_score(labels, labels)\n",
        "        rand_indices.append(rand_index)\n",
        "\n",
        "    # Compute mean of adjusted Rand indices for the current number of segments\n",
        "    mean_rand_index = np.mean(rand_indices)\n",
        "    adjusted_rand_indices.append(mean_rand_index)\n",
        "\n",
        "# Plotting\n",
        "plt.plot(num_segments, adjusted_rand_indices)\n",
        "plt.xlabel(\"Number of segments\")\n",
        "plt.ylabel(\"Adjusted Rand index\")\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "jEhAYY-c3uWN",
        "outputId": "821e6c56-2722-4cdd-bad6-52ee6171ecd9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "from sklearn.cluster import KMeans\n",
        "from sklearn.metrics import adjusted_rand_score\n",
        "from sklearn.utils import resample\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "np.random.seed(1234)\n",
        "\n",
        "# Assuming data is your data matrix\n",
        "\n",
        "# Initialize variables\n",
        "num_segments = range(2, 9)\n",
        "n_rep = 10\n",
        "n_boot = 100\n",
        "adjusted_rand_indices = []\n",
        "\n",
        "for k in num_segments:\n",
        "    rand_indices = []\n",
        "    for rep in range(n_rep):\n",
        "        boot_indices = resample(range(len(MD_x)), n_samples=len(MD_x), replace=True)\n",
        "        boot_data = MD_x[boot_indices]\n",
        "\n",
        "        kmeans = KMeans(n_clusters=k)\n",
        "        labels = kmeans.fit_predict(boot_data)\n",
        "\n",
        "        # Compute adjusted Rand index\n",
        "        rand_index = adjusted_rand_score(boot_indices, labels)\n",
        "        rand_indices.append(rand_index)\n",
        "\n",
        "    # Compute mean of adjusted Rand indices for the current number of segments\n",
        "    mean_rand_index = np.mean(rand_indices)\n",
        "    adjusted_rand_indices.append(mean_rand_index)\n",
        "\n",
        "# Plotting\n",
        "plt.plot(num_segments, adjusted_rand_indices)\n",
        "plt.xlabel(\"Number of segments\")\n",
        "plt.ylabel(\"Adjusted Rand index\")\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "b35YhZ64AuxP",
        "outputId": "f37bb72e-bc41-4a25-90e2-4694ce31733b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming MD_km28 is the array of data for the \"4\" segment\n",
        "\n",
        "# Histogram plot\n",
        "plt.hist(MD_x, bins=20, range=(0, 1))\n",
        "plt.xlabel('Value')\n",
        "plt.ylabel('Frequency')\n",
        "plt.title('Histogram of Segment \"4\"')\n",
        "plt.xlim(0, 1)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "xpZ2siCgLQlA",
        "outputId": "7d723cac-35fe-47ea-b3d4-03c133214910"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming MD_km28 is the array of data for the \"4\" segment\n",
        "MD_k4 = MD_x\n",
        "\n",
        "# Compute segment stability values\n",
        "segment_stability = []\n",
        "for segment in range(1, len(MD_k4) + 1):\n",
        "    segment_stability.append(np.mean(MD_k4[segment - 1]))\n",
        "\n",
        "# Plot segment stability\n",
        "segment_numbers = range(1, len(MD_k4) + 1)\n",
        "plt.plot(segment_numbers, segment_stability)\n",
        "plt.xlabel('Segment number')\n",
        "plt.ylabel('Segment stability')\n",
        "plt.ylim(0, 1)\n",
        "plt.title('Segment Stability')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "PbEju_fmbWsk",
        "outputId": "8561784d-9c38-41c2-d67d-6f6830b54881"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAjcAAAHHCAYAAABDUnkqAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAACUB0lEQVR4nO2dd3wUVdfHf5uekN4pIaEjHQLEgIBoBAFRREEQAVFUVBTBgjxSREVQXxErPBbEglIUy2MBqYIC0psI0kJPQksCBNJ23j/CbnZ2Z3Zndtqd3fN9PjxmZ+7cObefOffcey0cx3EgCIIgCILwEQKMFoAgCIIgCEJNSLkhCIIgCMKnIOWGIAiCIAifgpQbgiAIgiB8ClJuCIIgCILwKUi5IQiCIAjCpyDlhiAIgiAIn4KUG4IgCIIgfApSbgiCIAiC8ClIuSEIgtCAefPmwWKxYMuWLR7D3njjjbjxxhvtv3Nzc2GxWDBv3jz7tRdffBEWi0UDSQnC9yDlhiBMxu7du3H33XcjPT0dYWFhqF27Nm655Ra8++67RoumO6dOncKLL76IHTt2SH5Gav69+uqr+P7779UVWGXMICNBGAEpNwRhItavX4/27dtj586deOihh/Dee+9h5MiRCAgIwNtvv220eLpz6tQpTJ06VbJyIyf/9FQcfvvtN/z2229uw0ycOBFXrlzhXSPlhiCECTJaAIIgpDNt2jTExMRg8+bNiI2N5d0rKCgwRigTwWr+hYSEeAwTFBSEoCDqsglCCmS5IQgTcejQITRv3txlYAaA5ORkl2tffvklMjMzER4ejvj4eAwaNAjHjx93Cff++++jfv36CA8PR8eOHbFu3ToXP5A1a9bAYrFg0aJFmDp1KmrXro2oqCjcfffdKCoqQmlpKZ566ikkJycjMjISI0aMQGlpqVcy3XjjjWjRogX27t2L7t27IyIiArVr18brr7/Ok6dDhw4AgBEjRsBisbj4qXibfxaLBZcvX8Znn31mj/f+++8HABw9ehSPPfYYmjRpgvDwcCQkJGDAgAHIzc0VfGdJSQkeeeQRJCQkIDo6GsOGDcOFCxdc0uuY10I4+9yIybh69WpYLBZ89913LnF89dVXsFgs2LBhg9t3EYTZoc8AgjAR6enp2LBhA/bs2YMWLVq4DTtt2jRMmjQJAwcOxMiRI3HmzBm8++676Nq1K7Zv324f4GfPno3Ro0ejS5cuGDt2LHJzc9GvXz/ExcWhTp06LvFOnz4d4eHheP7553Hw4EG8++67CA4ORkBAAC5cuIAXX3wRGzduxLx581CvXj1MnjxZtkwAcOHCBdx6663o378/Bg4ciG+++Qbjx49Hy5Yt0atXL1x33XV46aWXMHnyZDz88MPo0qULAKBTp06K8++LL77AyJEj0bFjRzz88MMAgAYNGgAANm/ejPXr12PQoEGoU6cOcnNzMXv2bNx4443Yu3cvIiIieHGNHj0asbGxePHFF7F//37Mnj0bR48etSuL3iIm4/XXX4+0tDTMnz8fd955J++Z+fPno0GDBsjOzvb6vQRhCjiCIEzDb7/9xgUGBnKBgYFcdnY299xzz3HLli3jysrKeOFyc3O5wMBAbtq0abzru3fv5oKCguzXS0tLuYSEBK5Dhw5ceXm5Pdy8efM4AFy3bt3s11avXs0B4Fq0aMF73+DBgzmLxcL16tWL967s7GwuPT1dtkwcx3HdunXjAHCff/65/VppaSmXmprK3XXXXfZrmzdv5gBwn376qYecq0Jq/nEcx9WoUYMbPny4y/WSkhKXaxs2bHCR99NPP+UAcJmZmbz4X3/9dQ4A98MPP/DS65jXR44ccUnXlClTOOcuW0zGCRMmcKGhoVxhYaH9WkFBARcUFMRNmTLFJTxB+Bo0LUUQJuKWW27Bhg0bcPvtt2Pnzp14/fXX0bNnT9SuXRs//vijPdySJUtgtVoxcOBAnD171v4vNTUVjRo1wurVqwEAW7Zswblz5/DQQw/x/DmGDBmCuLg4QRmGDRuG4OBg+++srCxwHIcHHniAFy4rKwvHjx9HRUWFLJlsREZG4r777rP/DgkJQceOHXH48GEvc096/rkjPDzc/nd5eTnOnTuHhg0bIjY2Ftu2bXMJ//DDD/Py69FHH0VQUBB++eUXr9PhiWHDhqG0tBTffPON/drChQtRUVHBy1OC8FVIuSEIk9GhQwcsWbIEFy5cwKZNmzBhwgRcvHgRd999N/bu3QsAOHDgADiOQ6NGjZCUlMT7988//9idZ48ePQoAaNiwIe8dQUFByMjIEHx/3bp1eb9jYmIAAGlpaS7XrVYrioqKZMlko06dOi7TNnFxcS7+KnKRkn/uuHLlCiZPnoy0tDSEhoYiMTERSUlJKCwstKfVkUaNGvF+R0ZGombNmqI+OmrQtGlTdOjQAfPnz7dfmz9/Pq6//nqXsiYIX4R8bgjCpISEhKBDhw7o0KEDGjdujBEjRmDx4sWYMmUKrFYrLBYLfv31VwQGBro8GxkZ6fV7heJzd53jOACQLZOn+JTiLv/c8cQTT+DTTz/FU089hezsbMTExMBisWDQoEGwWq2qyKYGw4YNw5gxY3DixAmUlpZi48aNeO+994wWiyB0gZQbgvAB2rdvDwA4ffo0gCrHUo7jUK9ePTRu3Fj0ufT0dADAwYMH0b17d/v1iooK5ObmolWrVqrJKFUmOai1Y69z/rmL+5tvvsHw4cPx5ptv2q9dvXoVhYWFguEPHDjAy9tLly7h9OnT6N27t2K53aV/0KBBGDduHL7++mtcuXIFwcHBuOeeexS/kyDMAE1LEYSJWL16taDlwua/0aRJEwBA//79ERgYiKlTp7qE5zgO586dA1A1qCckJOCjjz6y+8YAVVMYSqd/nJEqkxxq1KgBAKKKhTNS888Wt1C8gYGBLnG8++67qKysFHznhx9+iPLycvvv2bNno6KiAr169ZIkszvEZASAxMRE9OrVC19++SXmz5+PW2+9FYmJiYrfSRBmgCw3BGEinnjiCZSUlODOO+9E06ZNUVZWhvXr12PhwoXIyMjAiBEjAFRZSV555RVMmDDBvrQ7KioKR44cwXfffYeHH34YzzzzDEJCQvDiiy/iiSeewE033YSBAwciNzcX8+bNQ4MGDVQ9y0iqTHLjjI2NxZw5cxAVFYUaNWogKysL9erVEwwvNf8AIDMzEytWrMDMmTNRq1Yt1KtXD1lZWbjtttvwxRdfICYmBs2aNcOGDRuwYsUKJCQkCL6zrKwMN998MwYOHIj9+/fjgw8+wA033IDbb79dVlqFEJPRxrBhw3D33XcDAF5++WXF7yMI02DEEi2CILzj119/5R544AGuadOmXGRkJBcSEsI1bNiQe+KJJ7j8/HyX8N9++y13ww03cDVq1OBq1KjBNW3alHv88ce5/fv388K98847XHp6OhcaGsp17NiR+/PPP7nMzEzu1ltvtYexLQVfvHgx71nbkufNmzfzrtuWLp85c0a2TN26deOaN2/ukp7hw4fzlpdzHMf98MMPXLNmzbigoCCPy8Ll5N++ffu4rl27cuHh4RwA+5LrCxcucCNGjOASExO5yMhIrmfPnty+ffu49PR03rJsW778/vvv3MMPP8zFxcVxkZGR3JAhQ7hz587x3uXtUnAxGW2UlpZycXFxXExMDHflyhXRfCEIX8PCcSp55xEE4TNYrVYkJSWhf//++Oijj4wWh/CSiooK1KpVC3379sUnn3xitDgEoRvkc0MQfs7Vq1ddfEg+//xznD9/3uORAATbfP/99zhz5gyGDRtmtCgEoStkuSEIP2fNmjUYO3YsBgwYgISEBGzbtg2ffPIJrrvuOmzdulXSoY4EW/z111/YtWsXXn75ZSQmJgpuLkgQvgw5FBOEn5ORkYG0tDS88847OH/+POLj4zFs2DDMmDGDFBuTMnv2bHz55Zdo06aN24NECcJXMdRys3btWrzxxhvYunUrTp8+je+++w79+vVz+8yaNWswbtw4/P3330hLS8PEiRPtp/USBEEQBEEY6nNz+fJltG7dGu+//76k8EeOHEGfPn3QvXt37NixA0899RRGjhyJZcuWaSwpQRAEQRBmgRmfG4vF4tFyM378ePz888/Ys2eP/dqgQYNQWFiIpUuX6iAlQRAEQRCsYyqfmw0bNiAnJ4d3rWfPnnjqqadEnyktLUVpaan9t9Vqxfnz55GQkKDqBmUEQRAEQWgHx3G4ePEiatWqhYAA9xNPplJu8vLykJKSwruWkpKC4uJiXLlyBeHh4S7PTJ8+HVOnTtVLRIIgCIIgNOT48eOoU6eO2zCmUm68YcKECRg3bpz9d1FREerWrYvjx48jOjraQMmqmLPmEN5bfRAAsGdqT969O9//EwcKLgnec6bFlGq/I09hCf2wlcu3j2ajSaq0+jZ24XYs31sAoLosbfE0TonEksc6ayApYRZsdSEuIhjrxt9ksDQEoR/FxcVIS0tDVFSUx7CmUm5SU1ORn5/Pu5afn4/o6GhBqw0AhIaGIjQ01OV6dHQ0E8pNaEQkAkIjAMBFnqCwGggItQrec8YWh5SwhH7YyiUySnp9CwmPREBolVJre8YWT1BYDSpfP8dWFwJCg6kuEH6JFJcSU+1QnJ2djZUrV/KuLV++HNnZ2QZJRBDiMOKrTxAE4XcYqtxcunQJO3bswI4dOwBULfXesWMHjh07BqBqSslx2/BRo0bh8OHDeO6557Bv3z588MEHWLRoEcaOHWuE+AShO+QETxAE4RlDlZstW7agbdu2aNu2LQBg3LhxaNu2LSZPngwAOH36tF3RAYB69erh559/xvLly9G6dWu8+eab+Pjjj9Gzp2/6mNA45juQEYdQG6pSBCGOoT43N954o1vTvdC24TfeeCO2b9+uoVQEoQ7eKjSkCBEEQSjDVD43BEEQBEEQniDlxmA4Mi4TBEEQhKqQckMQGqGF2kpuWARBEJ4h5YYgdIAsdARBEPpByg1BEARBED4FKTcEoRG0iR9BEIQxkHLDMLRhm+8gR8+hKSxCCqQ7E4Q4pNwYDHVQhBxI3yUIgvAMKTcEoRGktxIEQRgDKTcEQRAEQfgUpNwQhEbQlCNBEIQxkHJjMO58KMi9wj8hpYggCEIZpNwYDA1khBzIoZiwQVsNEIQ4pNwQhEbQkm6CIAhjIOWGIAiCIAifgpQbgtABtWYQLOSJRVyD7IIEIQ4pNwShEd4qNDRoEQRBKIOUG4Yh51GCIAiCkA8pNwZDX+n+ATkXEwRB6AcpNwRBEARB+BSk3BAEQRAE4VOQcsMw5HNDOEN1grBDM50EIQopNwShEV6vlqJBiyAIQhGk3BCEDpDCQhAEoR+k3BgNjXoEQRAEoSqk3OgAx3HYcbwQV8oqjRZFF6xWDtuPXUBphX+kVwyx5d8nLpRg76li7DlZpLNE/gXHcdh1ohCXSyuMFkUye08Vo7CkzLD3Xy2vxPZjF2C10kcXYW5IudGBRVuOo9/7f+LejzfKes6sW+3P/v0Q7vxgPR77cpvRojBHeaUVN7y2Gr3fWYfb3v0Da/89I+t5c9YIY/hp12nc/t6f6Pf+n0aLIoltxy6g9zvr0GnGKsNkePiLrbjzg/X4aN1hw2QgCDUg5UYHFmw+DgDYfqzQWEF04tM/jwAAVu4rMFgSdrB9B18p51uzft2T5yY0oYTvt58EABwouGSwJNJYfa29lEi08GpRS2zK9mfrczWInSD0g5QbgtAIcqcyFrNlv5WhCsOOJAThHaTcEARBMABDug1BmB5SbgyG+jP/gLs2cpHPDCEGSz68pGgRZoeUG4LQCE3GB9qi2GfhGNIo6KBXwuyQcmMw7oYqGsf8E4bGOFNjtubDUrFTHSTMDik3BkN9iH9A5aw/ZstzuXvLaGnpMVveEYQzpNwQhEawNM1AsA9LPjcEYXZIuSEIHbHQXCMhAlNLwdkRhSC8gpQbhqFh0PdQas2hOuG7yK0b2uofpN0Q5oaUG4LQCG+HBxpW/BOWyp0sN4TZIeWGIHSExgxCDKampYwWgCAUQsqNwTDUnxEaQuVMeIIciglCPUi5YRlyPjU1QgqNFCWHVln5JyyVO0uyEIQ3kHJDECaC9F3pmG2AtlqNloAgfAdSbghCFzjefwjCGbk+N1rqblRNCbNDyg1BaIXQtBQNG4QILNUMubslEwRrkHJDEATBACytliIIs0PKjcG4+5In9wrfwTZuSXIo1lYUglFY0m0YEoUgvIKUG4LQCC2moEjh9V3IckMQ6kHKDUHoCA1fhBhMubmwJAtBeAEpNwShI2ZbnkzoB0t1g6xIhNkh5YYgNILGB0IOVF8IQj1IuSEIHeCc/us2LA1yfonsfW40nDuiKkiYHVJuDMZdf0a70RLOWKhSSMZsAzRNBRGEepByQxAaITRU0fhFiMGSQzHVU8LskHJjMPQh7l/QDsX6YbamJVeh0Pb4BaqnhLkh5cZg6AuJIAiArdVSDIlCEF5Byg3DmO3Lk+AjOFjRoEGIwJLPDTuSEIR3kHKjA6SkEGqNW1SXpGO2AZolnxuCMDuk3OgA9VmEDUlLwTWXgmARliw3VAkJs0PKDUFoBI0PhFkhh2LC7JByY0KOnSvBs4t34mDBRdEwViuHl3/ai1d+2ovnvtmJguKrqrz7vVUH8OmfRySH33G8EM99sxNnLpaq8n6z8skfhwGYx1Hzw7WH8N/fD/Gu5RdfxXPf7MTuE0UGSeU9xVfLjRbBI/I38dMOmyh7TxXj2cU7carwioZvM5bTRVfw7OKd+PuUcL3enHse47/ZhcKSMizZdgITluzC89/uwoZD53ST8e0VB/DFhlzd3ieHi1fL8fy3u7D+0FmjReERZLQA/o67Dkpsw7YR8zbh0JnLWPZ3Hna92FMwzIp/8vHJH9VKSF5xKT5/oKMSUXGy8Ar+77d/AQDDszMQEODZA6Tf+38CAM5fLsfHw9srer+ZWfZ3PkorKk3xRXyptAKv/rIPADCoQ13ERAQDAJ5ZvBPrDpzFoi0nkDujj5Eiyub/lu3HS3e0MFoMt7Ck+NpE6f3OOgDAwTOX8N1jnY0TSEOe/Ho7NudewOKtwvV6wJwNAKqsWYu2nLBfX7D5uC7t4PCZS3hrRVW/OzQ7Q/P3yeXN3/7Fgs3HdcsPqZDlxoQcOnMZAFB8tUI0zLnLZfxnCi4pfm9JafX75O7Pc+iM8vebDefBqlIFj1E99kUqr7Da/y6rrP77oAp1yCiOnisxWgSPMKXcOAnzb564ldjs7JOYttyzxtShy6WVhrxXKsfOs9m2SLnxUZzHQLX30GCpIzYLVk5avrG034kjASbecZIpZ13ClJjB6moEzPZXRgvw/vvvIyMjA2FhYcjKysKmTZvchp81axaaNGmC8PBwpKWlYezYsbh6VR1/El/CeRxis/r5F6x2AlIxsW5jCmWcpcHTWRI608wcdYioxlDlZuHChRg3bhymTJmCbdu2oXXr1ujZsycKCgoEw3/11Vd4/vnnMWXKFPzzzz/45JNPsHDhQvznP//RWXL2sWi8Iwq1c884D1ZWztz5ZjbLjeNgRJYbeThnl7lKXhuoBgnDar4YqtzMnDkTDz30EEaMGIFmzZphzpw5iIiIwNy5cwXDr1+/Hp07d8a9996LjIwM9OjRA4MHD/Zo7SHUgdVKbBY4jjO19UaC/ziz+KRy44NJItxj5v5DbwxTbsrKyrB161bk5ORUCxMQgJycHGzYsEHwmU6dOmHr1q12Zebw4cP45Zdf0Lt3b9H3lJaWori4mPePJdzVVUVjicYDkdxGRo1SHbO21hY5t+82meXGETPs/ktNxCAk5jsLfRgDIrjAokyAgUvBz549i8rKSqSkpPCup6SkYN++fYLP3HvvvTh79ixuuOEGcByHiooKjBo1yu201PTp0zF16lRVZTcDrg7FyuNktRIzi/NqKY4zdR6aWLdhYmAizA0LNYgFGZxhUSaAAYdiOaxZswavvvoqPvjgA2zbtg1LlizBzz//jJdffln0mQkTJqCoqMj+7/jx4zpKbBzOX9lqOyuyWqFZxuxTI2bzuXHEFJYbowVwh3mLXjVM3nz9DsMsN4mJiQgMDER+fj7ven5+PlJTUwWfmTRpEoYOHYqRI0cCAFq2bInLly/j4YcfxgsvvICAAFddLTQ0FKGhoeongCBkYrV6DsMyZva5IcuNMkxc9KrBQg2qqsdslQarbcswy01ISAgyMzOxcuVK+zWr1YqVK1ciOztb8JmSkhIXBSYwMBAAuxkMeF8VlXwoa139Gc5uZnDOIqvJp6XIckMQxkLVWDqGHr8wbtw4DB8+HO3bt0fHjh0xa9YsXL58GSNGjAAADBs2DLVr18b06dMBAH379sXMmTPRtm1bZGVl4eDBg5g0aRL69u1rV3JYxFcqpJKpLV/JAyWoMi1loH5hZodilj9+7MgUkaV9ccyM5FxkoA4xIIJpMFS5ueeee3DmzBlMnjwZeXl5aNOmDZYuXWp3Mj527BjPUjNx4kRYLBZMnDgRJ0+eRFJSEvr27Ytp06YZlQTFaNVBuWzip7JDMXWs8rFazZdvjvKaeVqqkkYFQiFUg8yF4Qdnjh49GqNHjxa8t2bNGt7voKAgTJkyBVOmTNFBMnNDOxQbj/N4auU4U684MvW0lMn9nYzGzFY7tWBBP2bx44iFfBHCVKulfBF3+5Yo2dPEyP1QCGGk+tyw1Fk41iMzW24YylLV0LOekG7DhmLBUt9gg4V8EYKUGx1w1y/oNS2lNiw2MtYx+1JwM3+9m8HnhtVBgiDMCCk3OuArXZaS8cEEY4vqaHG2lJHqhZktN2ZXLAntkKr4slCFWJDBGRZlAki5IQjdqLSa/Wwp82o3tBScUIqJm65fQsqNn0AN03jMbj0wt3LDft6bQES/hoXioalL6ZByowNeDwlKNvFzGYhUPn6B2phHnPOIkzgtxWwHZjLdxjEXqb4qw2RFrwksWF0ZEMEFFmUCSLnxWbTojJgddE1CpcnnRszsc8PCwOQJuRLqmSIzO5P7EizWYlbHBVJudMBt0WtULzRfLSVTcFYbgJ6ocfyCHmOMmIjmnpYyWgKCVahqKIPV7wZSbvwEtXcoJjwjdLaUmbtScys35s13gg1YqEJmsECyAik3PorzJn5qNwlqY/Ixi/VArAM1sW5jivpKAxfbsGB9Nl4C80DKjQ4YMSaYeSDyVaxW8+1Q7AhZbvwX85a8erBQhViQwRkGRQJAyg3TKOlQtO6MWK3QLOH8JW6Wwxt5q4x85OBMMyg3LEtoYr3Wt2CxkrAoE0i50QVGy15XTDC2aI7UpeDuMPLMMHNbboyWQH1oGksdpGYj5bYwLEzXCUHKjcFoVS1cTgVXuSOkjlU+aqyW0gOOb7qxY2LdhuoroRgW6hCrigSLkHJDEBrh3BeafZ8bM+91wsC45BG2ZTRv2asFC8XDdh1hC1JudMDbbkHZWKL+ainHhkVtTD5V01LKck5v/cJR2kCTKTeOX9pm8XciGIaBKsSACC6w2rRIufFRTDYO+QVSLTdGdxZiCliAiXsLqwmsZuxLSBgNC1NjzrAnURUm7q7MgxGFr/XxC3LbGINtUnfM4nPjiKO8pp6WMloAk2PioveIVGsq1SFhWFS4AFJuVMVq5ZBXdBVXyirBcRyullcCAC6XVvDCOFJ6LYwzV8srXQbCikoryiqsvGslZRUor+RfE4LjquJ09wV7pcxVlguXy+zpcKbSyqG0gp/WKtk9y+PunUL3Kq0ciq6US47XE2UVVlRUWq/lM4fiq+WC+eicNiGkhAG8W7HDcRwuXC5zuX6lrNJezxwpr7Ta02FLmw3bb8cwjlwtr6yyLnH8aza0Gt/c1QHncFfKquqwTS7nZ8XistV/juPseWq1cigqKeflke15W/0Aquu5tziWoa3MHOuMkMzO7VwwXlSXmXNZC8XrnA7H+xcul6GoRL32ZcOWj0JplFPucgZQqfECVX1qRaVr3BxXVTcc45Iqg62e2rD1u1fLK1F8tdxer6TI6tyvXPHQzzi2D6G+QE6eS8Fq5VDqUFc9jTF6EmS0AL7EyM+3YNW+At61T+/vgH/zL9l/9/vgT/w4+gYAQFFJOT7bcNQlnmPnStD1jdUu129683dcKOEPdM0mL0NESKBLWOev7ItXy9FiyjI0rx2DHx7v7BL+r8PncM+HGzGqWwM836spAGDGr/sw5/dDAIDfn72R/wAH9Hjrd+QVXUXnhon4bW8+Vj9zI85dKsUlB2XOHd9vP4mnFu7Ay/1aYOj16bx7ry/dhw/WHMKCh6/H9fUT0OA/vwAA7mxbG2/d00ZS/GKUVVjR/pXlKKu04mq5FUlRoSi6Uo70+Agse6orAhw2dHn4i61Yvjcffz5/E2rHhgvG9+iX27D07zz8Mb476sRFiL5XyHLj6Yu42xtrcPxCCe/alxuPYuL3ewAAgzumYXr/VgCqBq/s6asQYAG+fbQTury+Gj2apeDDYe1x5mIpOkxbgc4NE+z1ceOEmxF4La2XSyvQ9qXlaJQSiU/v72B/143/twarnu6G+kmRmiwFf2/VAfzfb//i0/s7oHvTZNFw037ei4/WHQEARIcF4WJpBd4b3A6Pf7UNT97cCONuaYzNuecxYM4GPNy1Pv7T+zre85dKK9B00lLkXJeM9IQa+OSPI/Z7nRsmYP7I67Fw8zGM/3Y3pvdviTeW7Ud4cCD+GN8dfd5Zh9xzl7F9Ug+EC7Q1T0xYshsLNh/HiM4Z+PTPXNzTPg3nLpdixT8FmHNfJkZ9uRXDs/n1v+OrK7D5hRwEB4p/f3Ic0OrF3xAaFICLpRXo06om3r+3HQDgv78fwvRf9+HDoZno0TwVAND77XU4er4qHT/uPInx3+7G63e1wsEzl/Dh2sMu8S/actz+tzclb2tnxVer+oNX72yJe7PqAgC+3nQME5bsxlv3tMadbeuIxnEg/yJueWst7mpXB28ObO3xnT/sOIkxC3bg5TuaY2h2htuwHMehy+urUSEwGN/3yV/48+A5fniPbwe+3XoCTy/eCQB479626NIwCW1f/g2RoUH2fACAI9N7Y9aKA3h75QF8/kBHdG2c5BKXbRxIi6/ud254bTVev7sVBrZPcwm/7O88PPLFVvvvkMAAxNUIxjejqvqC+BohOH+5jNfHC7Fibz5Gfr4Fz93aBI/d2NBtegd9uBF/nyq2/242eSky0+OweFQnt8/pAVluVMRZsQGA/3y3m/d714mi6vD78wXj+XxDruD1Y+dLcPGqq+JQIkHLtnJAhZXDzuOFgven/fIPANiVGee/PxdQwg6duYzLZZX4bW9VOj5bn4vpv+7zKIuNpxbuAABMujZQO/LBmqp3v/LzXt7177aflBy/GLnnLqP4aoXdwnTmYinKKqw4UHCJ9xUCAMuvpW2xQ0fvzNK/8wAACzbxwzgrMkIOxZ4+Bo+dL3GaGoJdsQGArx3eefZSKc5eKkXBxVL74G0rm//tPAUA+PPgOZy5WIozF0tR6KAobzpyHmWVVvx9qtilE/9sfa793Wrzf7/9C8C1nThjU2wAoPhqBTgOePyrbQCAd1YeAAC8eq0OCw3UNlb8U8BTbADYB7Hx31bJMGHJbpy/XIaThVdQWmHFvryLuFpuxa4ThTJSVs2CzVVl9OmfuQCAhVuOY8U/VX3FqC+rBiPnj5zCknIcP89XaoUoq7Ti4rWPiZ93nbZft7XDZ7/ZZb+2P78qHTtPFNrT+ty3u0Tz6zmHZ73h6LV2ZsOxjCcsqfp77MKdbuP47zXZvt12QtI7xyzYAQCY9MPfHsNeKa/E6aKrgvecFRtA2tS6TbEBgKcW7MCafwtg5cDLBwAor+Tw9rV6O+VHYVm/2JgLADh+/grvuli5PLOIn5dllVbkF5fio3VVeXj+mvXQsV8X4rlvq+J/fel+t+EAYFPued5vKwdszr3g8Tk9IOXGQKwilmehQUTuvKbccchTeKn+ImafmleymkmtXXDV2MvCub6w7jPBqniO+aa5z5FTmalRm4TqJKt5LQRLu2LLbZfuqotjuaiWRJGIGMpCXSHlxkDEmooa5n+5UXjquF2sEGIralgfRT2gRD/xNNXMQT+HYufXyCkXI/wDWXVWdtwRmqWBVjJsuD94jdn7EynymzyJzELKjca4GyhEv/QFLTfy3itfuXF/39kSIDqQm7yhiifLc8Kc88jI3USd65aSDlQPxUONV2i9QlBzw43zbxWqj1rWRKMGYJYGftl9MCyi8vMsNyolkqGsYgJSbjTG7QAnqtuoYLmRGYfnaSn+b7E9W8zewMSm/6QoKp5CCEWtVeft4rgs51kXvyDtlTRWv9D5SddbRuX5LtRMvRlMvemTVFKrVIlFDWQ3A4t4vjn2n2IWQUZXWJsGUm40xhvLjaDPjUryiOGpw7Ny/CFPjuz+gpQlkEJOxnJwN8i4jcvTtKPB8xes1hvHeq73tJRWlhu98loN+U05FXgNC8Tld+wqxBR72bqUSDysTvlqDSk3GuNuvBO7J1QVZX89y52W8nDf+e3ilhuRhmqSzxAl01LOWeLqpyRRBi+zyp2C4rF8OeG/gerO0R+7SP4XtrY5oEUTMUerE4elcdmbPkxMsdCiP2Qpr1iAlBsDERuMjKiknn1unM7qEVNuZMjO4leZModiKVNX+gw3zsXD6rSPDVblc1zRaOS5XsZGYhxqTNGLocf3llgfp6fS7K+QcqM54i1IzHIjVNm9mO6VF97jailnh2Llq6WYNJeKWdMkiOrpa0xP65WSpeBGjIdq1AQt6lMlp6PlRoOct7VTpXXPqKaq5QeQ3ByRP00kXicd+3618pbB3tRQSLnRGLd9ipjfigrvldvRy5m2AHzYciPShUkZG1xWu6gUj1Qc43ZZLeXhPYbPGjJYFwDph51qgRplYotCaVzeFI8ayhpLH0De5KGY9FYJSrNRbdIsLgSeIOVGY9xNVYgvpxaw3Misb7I3/fPQh0h1KJb3TnY6LjWQNi2lHe6UFeGNIcWe1b9zY7UmSBmEtEIN5cBuuXG4plcq1KhGWma53HouexM/WBAgMsJKcVSXv2kgq63IGEi50Rh31VN0xZFgPNoOOJ7mtq2cs2VAJB4Znv8sNkXRrYckCKvHR77U/stZFqHyZekLjdWOmecboXFvqXQlnbs4+fuqKI9XLzT1uZEbXu6aDonTUmoViFo5xWpblAspNwaiZCD1GLfM8B4disHxYlVjnxsW25CS8cR1cOJc7uulUEjZxE+tpaZqwOIUJcCv51oOtFrDkB4rC20tN9rFbUN0WkrCPjdisNpWWIOUG41x14DEbgk6FGvcED2a3CX63MhpeFLN/EY64tqQIilLlhBX5UZ6nZJ7crkaqLNxpfroafHQwnJjj8sLtd2xLRv1Na/pQC53ql9m9FX73IhZbjheODmIxSlWRCz1S3pCyo3GCFUs2zUlA6nnF8sLLsnnxo3DanU80qX3tSWQnnxuOKlDjJd9kWN9cp2WEpZH6FkjYLUqGOhPrCreFK/S9qmOzw2jFUMi4sqN5zBi+edr/aZWkHKjMe5WzJhpl18rx0+LntNSeo67Sl7lsomfIkmUIWlaiqGBm9VBzLGea51frqvttHqhtLxWrNyosVpKcQziyJVPvs+NRZt9bkSDs9mGjIKUG40RahDVe08IPyNnCkH0vSp72ku33IjIIxBcalPUcwxWMoB5epbjXMOoOabzdxn2rNw4lqHReg6r3TJPudE5l1SdlnKIS3KdY6BQtFR6NV+Bav8/D3GRz40mkHJjALZqzZLJ2+M+N+A3yEqrWEj1N/HT1edGwQAmTU5XJ2O1cHeEghw/LiMsOowabnS13GiZBd5s3cDCIKqpQ7HG4QE3B2dKWAouhmyfG3nR+wyk3GiMsM/Ntf/KOH5BexOqp/j4EZp5Ez/3Gyt6H6/zAKK3kuBYR4zcfM4b1BjEnONQI/951i29p6VUdSiWDxM+N8qjUA1vzvcTPTjT4eNQ3OdG3tQ/S3nFAqTcaIygzw3cT0sZ4TDm6Z1Wq7SN3jRZLSU9SonxaTNKedInhKalBMN5KZ+7fYg8TXXyN/TTXzFidZm1GptVsoBje5Wa047t07jjF7SclpL5wejFO8T3uXEoD5UsNwQfUm40Rqj92B2KZTjlyp8flhfe87QU3+emUvSrQs60lLRwao8v3izPl7aJn7EDIefml5DSKfWoCT0UDxamQIRQ6nMjZwB12RdJRSXTu4FZ+G89MeJsKbEyE+uvxbC4i0vCztdy+yI5/o7uMHrlpFqQcqMxQh1U9bSUeeA4z9Me7jpAoXyQ7HOjck65VW6UOBR7uMIJhJG9UMLNA+5ObRfeoVgkHnkiqYPBX6NiA5dSnxsls4PaORTrs1pKFQxwKFbLF81isYi2JSX1Qq6TtRGWWBYg5UZjBC03XkxLaV09Pa+W4v8Ws0jJ2aJe8moptS03bnJTa4dibTdqq0ZK58m3NHEi1/VBjSFMiYVJLM1KXZeU5KWqpeBFZCzoNtpabkQUWpXqv8Ui3r7501LyEimWJ2pZWFndlkEupNxojKDPjW1aSsZyaq3nhz3XZ44Xqfg+N+xv4qeV5cYquoLMFre2SoNj/FIsROJmeeHrFl4YddNidH9q5YRlUGq5YcWx27vVUg4+N14MnOo4FOtfMcTyypvkiClQUo5fkOuTaXQbYg3Zys3w4cOxdu1aLWTxTQQtN8K3jJzr9NQuXDbxkzICeoDJ1VIKkLJaSssydrfPjTvfL9f75rTcKMHKcYIyKLViKds3SRufG+kOxaq93ms0HbBlTj+padGUskOxGL5iWdEa2cpNUVERcnJy0KhRI7z66qs4efKkFnL5DMI+Nxzvv84IrmyR+165G055aC8um/ipskOx1H1uZEQqJT6301LCSJHV42opjzEogz8t5ezvI2hDFI7H6bIeuxsb7d9h5TjBMlbqUCxnisNlylL229zFLT82pYOoGr4ejgqWXIdeT4jFJmZt82qRhsgzlVIsNyIPi09LicQjU26/dSj+/vvvcfLkSTz66KNYuHAhMjIy0KtXL3zzzTcoLy/XQkZTI1RPbPVadFpKQ3nE8GT+dXEoFpDdYhHvEIWSKnm1lK4OxUreJcHnxum3XMXBXZbxVrM5ddCeLDeOGDGTYvTHaKVV2HKj3KFYiQ+X14+6xuXFM/yDM714pxrTUg4vVtsXTK6FRu773TkU8/sZuZYbWcH91J3YS5+bpKQkjBs3Djt37sRff/2Fhg0bYujQoahVqxbGjh2LAwcOqC2naRGsWNcuijmXqvGlLLdCe3IEdm7YQl83HCfPlG3YUnCN3uXxbClOa4fi6sicZRHqmB3DON6Vokyq3WGq4luhIAoxnxulR1RwHvyw9IITKWt3KC0TteuIWo6+NsT9YcTCy6NqKbjwPce2p9Y+N2pNV/nKtJcih+LTp09j+fLlWL58OQIDA9G7d2/s3r0bzZo1w1tvvaWWjKZGcIfia81E7AtZsPJqrH5L6ch401IqWJ2MmorQajWQ0fvc8DplCaLI7dx5z6qdVoP7U07KtJQXaZY1LeXqhSf7faJxe+VQXP23N8WjRh1x7CP0al6i7diL90tZkaWWQzHBR7ZyU15ejm+//Ra33XYb0tPTsXjxYjz11FM4deoUPvvsM6xYsQKLFi3CSy+9pIW8pkPQ08FmuRGp+GrUXdkdgRSfG4ffYmdLydH6DduhWKNO0rPPDafpnhN8y428aSlJeaJhn2p0dy02LaVUYTVa4bXBs8xJlEm5z41yHEUwelpKzbYrZRM/MUi3kUaQ3Adq1qwJq9WKwYMHY9OmTWjTpo1LmO7duyM2NlYF8cyDWIchvM+N8D230yUam248rpay8tOoikOxxHDqO7iJx6fm6ha9xzV3ljV3m0m6XHcKK7hjtlzhPGB0hy2+FLz6b2/SLMcJVtMpS2+mpRSWiRryO1o11F5WLxabmLVN7uvd7nPjEJncAy9lH5wp16VBhYITs4TqiWzl5q233sKAAQMQFhYmGiY2NhZHjhxRJJjZkFMfbAOPWMenzqoAeXF4qojONge5S8EFQ0t2KFYXtw7Fijbxk3DfKYzcGUip/UWlhIFS6vELeqCFqV1OWXIcJzg1W+EwR+edQ7H8Z+zv8/5Rgbgcp9ekPcM/W8qbfW6Up8CxTNR2dJfzQeouvDjSdiiWm7fyi0L/Bs2JfCzoiWzlZvXq1ejXr5+LcnP58mU88cQTmDt3rmrCmQk51af7G2sQHxmCCqcR6L6P/8LILvWw43iha/wyXnCw4KLb+/d+tBHdmyQDAHLPXUZ+8VWs+KfAfn/r0fPITI/nPbPx8HlsPHze/nvb0Qsu8Vos4r47Zy6W4oF5m9GpQQJSY8JwW6tavM7zlZ/2onPDRFwsrcCGQ2ft1/ecLMbsNYd4cZVWVOKHHaew+0QRujRKxLZjhbBYgKiwIAQHBODw2cuICAlEaFAAosKCkXNdMqwcsOP4BQzITHNbVhsPn8P/dp7Coi0nkBAZYr/+xrL9WLj5ODLT49A+Iw43N03Bb3vz0L9dHXuYPw6exZ0f/InBHevianklCkv4qwcXbTmOLo2SXN5ZWlGJN5buR2CgBQ2TIrFVIG9trNl/xuXavR9tRN34CCzYfNx+badDHSq4eBWfbTjq8tz5y2V4f/VB5BVdRVJUqP36qC+38sJ9/McRdKgXjyXbqrd92HWiEJdKK2G1cujeNNl+fdW+fAQFBKBr4+p0Hiy4iCk//o2xOY1RVmHFxdIKXF8/AXP/qP4AWn/oHB79ciuiw4JRcPEqIsOC0TApEgPa10HNGPEPKRsLNh3DpiPV9bNCbN5UhM825OJKeaXL9TELdtj/fvmnvXilXwss3ZOHkKAAjOicgaiwYPv7Pt9wFL//ewZ14sLxxE2NsHxvHtYdOOsSpxgHCi7xfheWlOPzDblIigzF8QslKK/kEOjBY//jdYdx1SkdRSXl+Gx9dflfKq2QJM+x8yX2v4+cvYzPN+SiZ/NUfLY+F9uOXUBqdBgGtE9D54aJOFl4BZO/34OYiGAEBwSgY7143vM2/s2/iFSB8iwqKccPO08iKTIUFgtQPykSK/7JR9GV6jY0948j6No4Cb/vL0CfVrXQJDUKe04WYe/pYhw7V+KSrsfnb0NAgAXRYUF44qZGWL2/AAk1QnDozGWEBAUIKivvrTqA4+evCOaHkHL1yR9HUFpRiRsbJ+NUIf+5s5dKMW7hDsG4JizZbf/7512nkV3/KO7pkIYFm4+jqKQMYcGB+OqvY4LPVlRy+HLjUXRtlITf9ubhn9MXMblvM8GwAPD1puMu1176315EhAQiMiwIvVqkovhKBb7efAxXyytxwanfWrO/AAfyL2H1/gJ0b5KMmrFV/ffPu06LvpOFyVgLJ1MdDQwMxOnTp5GcnMy7fvbsWaSmpqKiQlrDMYri4mLExMSgqKgI0dHRqsVbUWlFwxd+VS0+Z7ZNugXtXl4uOfzsIe3w6PxtXr0rwAIcnt4HGc//LOu5+ztl4FJpBb7ZesJj2KVPdcGTX2/Hv/mXPIZ1pm3dWGw/Vij7OQB4e1Ab1IwJx8D/bvDqeWfuzqwjKb1i3JtVF6nRYZi5/F9V5JFD67RYnhLkLbte7IHosGAUXSlH66m/AQD+faUXQoKqXPqE6lHrOjHYeaLIY9wDMutgxl2t0OA/v8iS6aU7mmPZ33n48+A5Wc/J4c62tfHWPW0AVA1yL/+0V9X4w4MDBRUuudzUNBmr9lV/vNSJC8eJC8IDuDccmd4bzSYvkyzrpNua8fIqd0YfDJ+7Cb//W624hwQGoMyNgtokJQrLxnaV3UexzNicxnhrhXf9QM51ydiff1FUMfOWv6f2RPMpy1yufzCkHR5zM74cnNYLQYHqH4AgZ/yWbLkpLi4Gx3HgOA4XL17kWW4qKyvxyy+/uCg8hDlRdKibxHAnzl/xeqmpt4oNAOw5WYSUaM+WAKmsdhg0vIHjqqxFRqCGYgMAJaWViA4LRrHDV7Yn/wgpig0AXCgp88qRVEkdkcrKf/Ltf292sBqphRqKDQCeYgNAVcUGqKrDcmR1rCf1k2oAAE+xAeBWsQGA/fnurdNm5GShq6VLKiv+KUDd+AgVpamipEy4XI3qs+QgWbmJjY2FxWKBxWJB48aNXe5bLBZMnTpVVeHMhKfud3DHNEHzoOT4ZXbwRpkF5bzXiDlZi8Wiqk+J0U5zLMHx/AjUi5ORBUcuOJa9v568DMhfxcQ7A81/s80FmTOpLmjRFXlbr1koVsnKzerVq8FxHG666SZ8++23iI+v9skICQlBeno6atWqpYmQZsBTI/WXQVBOZ2VEnlig7kCk9PwdX6oWWgzwVVsQsNBVuuJY9v48SMvdXM8xPCtL5VmAybzwUiQWkiJZuenWrRsA4MiRI6hbt67fDNZS8dQBK80tuXXFiMolf6dNbeRwS5V2o1501AzsSNnkUS5Whi03vA3mDJTDaOSWj+OMJSunprOAL+UFCx8kkpSbXbt2oUWLFggICEBRURF2794tGrZVq1aqCWcmPFtu9JHDTBix02aAm/NevEGVYwN8BMd8VUsh4VSMS20sZLkBIF+RtfJ2fVZbGvOi9IOApZ6IhXKVpNy0adMGeXl5SE5ORps2ba75LbhKb7FYUFmpjhOcr6H4nBa5GzEZtLeBHAzxuYG6DU+p9YmFTkAp1ceJOAxaasXN8LQU33rNpox6INfiYKVpKUEUKzf0Bc1DknJz5MgRJCUl2f8m5KN4t0+TdJ5y5DTE58aibodKHUr1NAP/OAd18phlh2JHxdaHZhRkIzftNC0ljNK80KInMnPpSFJu0tPTBf8mqvHUAes9BWPYgCDjvUb43Kg+LaWCQzGrg7dUqqcZ1LfcOJ9pJget85UOMKxCriLrOIiTblON0tVSLMFCnyZJufnxxx8lR3j77bd7LYyZ0dyywkBl8YTcvt4wf2IVWx4NcNWWMNkHcUqA49iduuCfWM2mjHog1+LAXwruv/nmDIv13FuRWJhpkKTc9OvXT1Jk3vjcvP/++3jjjTeQl5eH1q1b491330XHjh1FwxcWFuKFF17AkiVLcP78eaSnp2PWrFno3bu3rPeqDTkUy8coxYAly41acRiJfVrK4Zpag5aV47zuYPXMV3+2QCialmJwQDcKxcqNyfsRtZGk3Fit2tjLFi5ciHHjxmHOnDnIysrCrFmz0LNnT+zfv19wt+OysjLccsstSE5OxjfffIPatWvj6NGjpjiBXLFDscbh9YaDcZv4qboUXL2oTIvty10ryw2re20EOOwuz3p70xK5gzJvnxt/1gqd8CX/IxZ0VtkHZ6rJzJkz8dBDD2HEiBEAgDlz5uDnn3/G3Llz8fzzz7uEnzt3Ls6fP4/169cjOLjqwLqMjAw9RRbFU1kqdihmoLJ4guNk7lBsgGqgtkMxTUtVW2m0WC3F9iZ+NC0FKNuh2IfGc8WwuBTc53cofuedd/Dwww8jLCwM77zzjtuwTz75pKQXl5WVYevWrZgwYYL9WkBAAHJycrBhg/Chhj/++COys7Px+OOP44cffkBSUhLuvfdejB8/HoGBgYLPlJaWorS01P67uLhYknxy8dS56e08a1RnK/W9FhhjuQlQ/fgF5XGYfVzUcrWUkmkprSG1tgq5CgrfoZjRwjUAxaulGPrQYkHZl6TcvPXWWxgyZAjCwsLw1ltviYazWCySlZuzZ8+isrISKSkpvOspKSnYt2+f4DOHDx/GqlWrMGTIEPzyyy84ePAgHnvsMZSXl2PKlCmCz0yfPl2XM688W26UTksZX1k8IX+HYqOOX1APstxUd8paWG4qTeNQbKAgBiN3askxOKtlawQaeX8ownuHYuORvM+N0N96Y7VakZycjA8//BCBgYHIzMzEyZMn8cYbb4gqNxMmTMC4cePsv4uLi5GWlqa6bB4dilV/o/lx9FnQEzW/KsihWHi1lFqDFqdgKbjWOJabPw/Ssnco5vncqC2NeVHqXE373PBR5HNjGyS8sUokJiYiMDAQ+fn5vOv5+flITU0VfKZmzZoIDg7mTUFdd911yMvLQ1lZGUJCQlyeCQ0NRWhoqGz5VMcPfG7kwMEYn5uAADp+QW1sdZPXOauUySxPS5HlpgrZq6VoWkoQFh2KxT4EPZUbC8Xq1bfzJ598ghYtWiAsLAxhYWFo0aIFPv74Y1lxhISEIDMzEytXrrRfs1qtWLlyJbKzswWf6dy5Mw4ePMhbvfXvv/+iZs2agoqNrni03Oi8WsqAyiXbodggvYA1nxuzY1NqNJmWsrI7Jcs/OJNNGfVA/vELjn/7b745ozQvtMhJMZEqKj28jYFila3cTJ48GWPGjEHfvn2xePFiLF68GH379sXYsWMxefJkWXGNGzcOH330ET777DP8888/ePTRR3H58mX76qlhw4bxHI4fffRRnD9/HmPGjMG///6Ln3/+Ga+++ioef/xxuclQHY+ngvvJICi1fVY5FBuzWoqlTfxYPl5AKrZOWYsDETm5GrOO8KeljJPDaGTvUOy0WooF51MWUKrc6KkolntQblhQ9mVPS82ePRsfffQRBg8ebL92++23o1WrVnjiiSfw0ksvSY7rnnvuwZkzZzB58mTk5eWhTZs2WLp0qd3J+NixYwhwcMxIS0vDsmXLMHbsWLRq1Qq1a9fGmDFjMH78eLnJUB3Pxy8ojV/mcksGKpcn6PgF36B6KbjDNZVy2cpxzCoOLK1OMRK55ePcl5FuU4XS4xe0yEexOCs9OEuxUKaylZvy8nK0b9/e5XpmZiYqKipkCzB69GiMHj1a8N6aNWtcrmVnZ2Pjxo2y36M1HldL+YFvhnmOX1AvPqWWG18YH22dMm9aSqU8rrSyvM+Nww82RdQF2dNSTuMiTU1VoXRDQy0sYGJtr5zVLw4HZE9LDR06FLNnz3a5/uGHH2LIkCGqCOWL6L2JH+v9BQeDloJb1LVq0Wop4Wkp9VZLKViOqnEbcKy//jxAK9mhWOi3VHxtOkvpaikt9A2xOCs8mJlYKBlJlhvHpdQWiwUff/wxfvvtN1x//fUAgL/++gvHjh3DsGHDtJHSBHhqaCYfvyQjz6HYiH1u1N7Ez19KVhyr0LSUmqul1IlKdRwtN6zKqAdyy9rZQuFtXTGB8UAWSi03WijYYuOaJ2sdC4qnJOVm+/btvN+ZmZkAgEOHDgGoWtadmJiIv//+W2XxzIPHotR5EFRat7ypnHIeMUolUPloKRV8qdSRw0isAtNSalHJcUx0lEJYeEvB2ZRRD+RaHFwsN14O6r5mLVNqudHE50bkumeHYuORpNysXr1aazlMj/YOxcqe1+t98jp5/ZuAxWJRdxM/FeIwex9tG2QcO2fbn0rz2mplN38sZLkBIF/JcF5G7K2SwuK+MEpQvBRcE8uN8PUKEzgUG7RHrP+ht0Ox0rrlTUOTYxXhYEwDUNuhWOm0lC/MalXvUOyg3MB1qsobOC838dMjW2kTvyrkDqrlTv4a3tYRX8tzpbs1a6PrCUfqcZ8bBvBqh+ItW7Zg0aJFOHbsGMrKynj3lixZoopgZkPrfW709jzwuqHIeM6I5qG2Q7ERy9lZw265ceic7bsWK+xxKznvVkvpUbfI56YKuUuYK5zqhLe+JkqncVhDaVvRxudG+LpzGbo8x0CLkG25WbBgATp16oR//vkH3333HcrLy/H3339j1apViImJ0UJGc+ChLPUeAxVPB3i7goGBSu0O1iw3VXGoIIiBCPncVDsZK18BwuoY5miN9WefG/nTUs6WG/K5AXxrtRQLw4Bs5ebVV1/FW2+9hf/9738ICQnB22+/jX379mHgwIGoW7euFjKaAk9lqfdScCOQs2y3SskwyudGxfjUi8q0CE9LXfuvGtNSyqLQDJ7PDatC6oBs5cbZcuPttJSPHbpppn1uPFtujEe2cnPo0CH06dMHQNX5UJcvX4bFYsHYsWPx4Ycfqi6gWfBUr5R+4cutLEorl7cmUjnty4gGEKD6aik6fsHttJTCxFVa2V0tRWdLVSHXV0Q1h2JG64W3+NLZUiwUjWzlJi4uDhcvXgQA1K5dG3v27AEAFBYWoqSkRF3pfAizTT1409CqtsqX9pxRDsWAuuZs5eXKQC+gEJsezM9X9aalvNGzdXEodug9WejMjUJuGZdbaVpKCDP53DiXIYvIdiju2rUrli9fjpYtW2LAgAEYM2YMVq1aheXLl+Pmm2/WQkZT4NGhWOmp4Do3ZG/aGcfJG6qN6Jo4lV9sxC7LrGHrlIWOX1C8MZmVgzcFpo9DMa2WArzY50alaSmldYs1lCZHi/wQnZbyxYMz33vvPVy9ehUA8MILLyA4OBjr16/HXXfdhYkTJ6ouoFnwPC2ljxx2lNYtb5QbSF+2a5RKYFX5rCJ/8KXyhJDzcLU1R3ncZsgjX7MiyEHuh5fLtBStlgKg3HKjySZ+XjoUs1A0Fo7VCW2NKC4uRkxMDIqKihAdHa1avCcLr6DzjFWi9yf0aorpv+5T7X0EwRIx4cEoulLucv2RbvXx398PGyAR4etEhwWh+Kr8w5oJ7QkJCsD3j3VGs1rqjbGAvPFbts9NYGAgCgoKXK6fO3cOgYGBcqPzGTzpiDR9QfgyQooNAFJsCM0gxYZdyiqsWPOvq56gJ7KVG7FBvLS0FCEhIYoFMjtim7oFMLTbG0OiAACe6dEYafHhLtc/vb+Dx2eTokK1EIl5WqfFYt/Lt2LjhJuxc0oPHJzWy2iRVOHAtF5IjQ4zWgzVyUiIMFoEt0zp2wyfP9DRaDGYpkFSDaNFMBVGzwlJ9rl55513AFSfCh4ZGWm/V1lZibVr16Jp06bqS2gSbAUZEhSAq+Wu85EsKRRJUaHILy41Wgw7deIiUCOEXxVDAgMkKYRNU6Nw5iI7adGL6LAghAUHIjXGt6ylwYEBiAkPRl7xVaNFUZWosGCjRXBLWHAgglTspJKiQplrl7Vjw3Gy8IrXz6dEh+HQmcsqSuTbGO3wLVm5eeuttwBUWW7mzJnDm4IKCQlBRkYG5syZo76EJkNsVRRL01J6n3PlCbGskSKlmh0yQWgFQ81fEIv9/9SBxWYZFEjnwOmJ0Q7fkpWbI0eOAAC6d++OJUuWIC4uTjOhzAhzq6V8ACl5Fhjgn2e/qnHsA6EfrJeWxaLuR08gg/VTqUysfRSyjtEr9WWPDKtXr+YpNpWVldixYwcuXLigqmBmw7a8WIkVQi9Y63eEjkTgwEnqTAL9U7dhqj4REmCt0QmgpogsKt8s+T36A0YvxJY9NDz11FP45JNPAFQpNl27dkW7du2QlpaGNWvWqC2f6RBtPgw1dnYkEYfjpJm2A/20w/LlZDPUVFSD9fKywKLq1DmLBlWawtYXpfv2KEV2FVy8eDFat24NAPjf//6H3Nxc7Nu3D2PHjsULL7yguoBmwaakin2xsNSsWPuqskBkQKNpKVFYK0PCPcyXlkVdpZLJaSmFyg2DSWIa001LnTt3DqmpqQCAX375BQMGDEDjxo3xwAMPYPfu3aoLaBa0PhXclxGfypMwLeWn+eqnyTYtrCujFqhbp1haQGHDX628RmH0rt2ylZuUlBTs3bsXlZWVWLp0KW655RYAQElJCW3iB/EOgsXGzgpiSgw5FItD1clcmKG41KxTLPq3KLfcsJcmljHNUnAbI0aMwMCBA1GzZk1YLBbk5OQAAP766y//3ufG9ocJHIpZQ6jP4OD9UvAAi/EmUe2hGmUmWB8XqwZuFX1uGEwvi1NlvozRfbBs5ebFF19EixYtcPz4cQwYMAChoVU7xAYGBuL5559XXUCzIdZ8WGpXLMliw2W1FMdJ+voTChNgsRhuEtUaFgcPtfDFL2TW02SBunWKRUu1UmsSeyliG6P7YNnKDQDcfffdLteGDx+uWBgz49mhmJ2mwVq/I6oQSnhWaCl4YIAFFUZ/NmgMa2WoJr6YNNbTZLGoq4CxqNwoXS3FYJKYxmjlxj8dFjTB0y5++kghBZYULcDWsQpf94SQqdkfHAdZK0PCPawPjFWb+KkHi65w/tAvsAQpNz5CteVG+D41K3e45o5792yHJ4WUG9ZHEhXwgyT6FGZQRmkpuHvYSxHbVLoesagrpNyohE1HNcNqKYZEAeBGIZQgp1AYFldqqA1rZagmvpg21tNkufY/1eJjMMG0iZ++mG6HYsI9oj431K7c4upQLE0hFOqQ/cH8zOLgQYjD0seNEGJTw97CYhNUWgbU5uRhummpwMBAFBQUuFw/d+6cn+9zU/VfU6yWMloAJ5Q4FAvhF8qN0QJoCEttRS3MkCZVp6UYbIOKTwVXSQ5/wXTTUmKmptLSUoSEhCgWyKxwHhyKWZpzZ+0LxGKxeO1QLASL8/1qw1oZEubGYvH9aSmlG34ymCSmMXpaSvJS8HfeeQdAVaX9+OOPERkZab9XWVmJtWvX+vcmfp4cihlqGAyJAsCd5cY7SVn8alQb30+hb8HiYO+Mr09LKT+qhcFEMUylWZSbt956C0CVNjZnzhzeFFRISAgyMjIwZ84c9SU0CZyHLYqZ6twYEgXQwqFYmTxmgKXqpDYsWTnVgvUUWeD701L+elSLURi91Zhk5ebIkSMAgO7du2PJkiWIi4vTTCgzQ0vBvUNIyZek3Ahc84dpKdYdVAk+DI71PCwWdesUi/VTaMNPOTCYJKYx2qFY9g7Fq1ev1kIO0+PJ54YlWGujSk4FF8IvloIbLYCG+OIgwpTlVgB1PW7YVG4Ur5ZSSQ5/wXQHZ1ZWVmLevHlYuXIlCgoKYLXyXaJXrVqlmnBmwtNqKZYaO2sdrZJTwYXwi/0s/CCJvoQZisvXfW4Uny3FYJpYxnSWmzFjxmDevHno06cPWrRowdxAaTTkUOwFIntseJtnLCmSWuGLfim+DOtVsko+H5+WYlAmX8Y0Pjc2FixYgEWLFqF3795ayGNaqi03IlYIHWUxG0pWSwk6FPtBJ+bLSfTNpLGdKrUdilmcGlYqEn1QyMPoaSnZLlYhISFo2LChFrL4BKaw3DAkiw1vHYqFYHGlhtr4fgp9CxbbnCNqH5zJYnKVzjKwXoasYfS0lGzl5umnn8bbb79t+AY9rOHZoZhahhhinY4UHUXoWT/QbfzCOuVLsF9aFp9fLaX8+AWVBPETKs02LfXHH39g9erV+PXXX9G8eXMEBwfz7i9ZskQ14cyEuY5fYEgYuOv4vZPTH/zAfDqJPpg4MyRJTRlZTK8/fPSwhNEGENnKTWxsLO68804tZDE19lPBRa0Q7LQshkQBoHATP4FrfjEt5cNJ9OGkMUvVtJRvW278oV9gCaOnpWQrN59++qkWcpgeT1oqNStxLBA5W8rL+PyjD/OLRBI6obZDMYvVU/FScBYTxTCVZnMoBoCKigqsWLEC//3vf3Hx4kUAwKlTp3Dp0iVVhTMjZnAoNgveTi/RtBRByEPtNsNi9VT80cNiohjGdEvBjx49iltvvRXHjh1DaWkpbrnlFkRFReG1115DaWmp354v5dGdmKGGwdrgb7EIr5bytjPyh/0s/MM6ReiJmsu3WetjANqhWG+M9rmRbbkZM2YM2rdvjwsXLiA8PNx+/c4778TKlStVFc5MeDoVPCosWPgGIbqjcJCUw2CE9rnxg/PxKoxeiqAhDI6LipFUlw3EAnUH71oxYSrG5h3O9SgsOFA4oA5Ehsq2I5ge001LrVu3DhMnTkRISAjvekZGBk6ePKmaYGYjMjQIHTLi0KpOrOD99ulxvN/v3dvWJczNTZPtfz95cyPVZEuMDOX9tgAYen26x+da14nB7a1rqSLDba1qom3dWMF7bUSuS+kgAywWvDu4rcs1ZxY9ks37HRIUgNta1eTJp5QBmXUkh32xbzO395OiqsqscUokrqsZjT6taqJ2bPXHRP2kGi7PLHz4et7viX2u8yjHPe3TpIiL1nViJIV7+Y7mso6/6N+utss1LXSbjvXivX528m3uy0qMIVl18eRNDdG5YQJGdMrw+v2A9pY6i8gu4QDQo1mKy7WWtYXrw4M31MPEPtdh9E0NcUebWhjcUVr9shEV5lkJ6NEsBQk1qsafmHDxj8ZVT9+I62pG23/3apGKFrWjXcJFhgahT6uaaJoaxbvu/NvRGnXf9XU9ymmjRkggXpDQFuVwR5tayLnOtVxsLHokG9ES8lIuoUHCKsPj3RtgzM2N8OaA1ogKDUJcRDCa1nTNaz2RrdxYrVZUVla6XD9x4gSioqIEnvAPmqRGYfGoTnj/3nYu9567tYmLmVaos73pumTkzuiD3Bl93DYeWxgpdKwXjy0Tc3jhLRbgxiZJbp8b1a0Bfhh9A94Z3BYjOmdIepcYz/ZsgvfubYeOGa5p7tu6FkKDhL+opJi2Ldfi2DO1p/2as3KTGBnikt//HZqJ9xzKqlvjJHu+3tnWdcCVwqv9W9r/blc3Fmnx4aJha8by793tpBhtfqGqzH4b2w2/jumC9+9th3cclLgWAoNLVv0EXmc/skt9tEmL5YUZm9MYOddVK9Gv3d0KmQ6Kt5gSMP8hvuI0JKsurq/PD9ujWQqGZmfg4Ku9JdfPmQPbIC5Ce6vmrHva2P9+pGt9+98jb6hn/7tXi1SX53o0S8F9Ej4EHBl5Qz3kzuiDaXe2xLgeTTB/5PVoL1D3pbDy6W7IndEHh6f3wYFpvWQ926eldIXd3WqpjvXicWtzft7MuKslGqdE8q6FBgVg0m3NMLJLfUSFBePtQW0xvX8rzBzYWpIMd2fWwe4Xewrec1R6Rnapj62TbkHujD7YOaUHNr1ws0v49+5ti3qJNfB8r6b2awk1QvHdY53tv5++pTFyZ/TBnqk98f697fCmk5x3Z9bBsz2b2H875k6vFtLz9u+XbuUpg28PamP/e2xOY9RPdP1QseH4fscPsLcHtcXHw9sjd0YflzFnVLcG6FgvHrtE8lKMIVnuFbasevH4+ckugvfG3NwYY29pjLsy62D31J7YPrkHXr2zpWBYvZCt3PTo0QOzZs2y/7ZYLLh06RKmTJlCRzLIQMgvxLFzUc0z38udfx3DKJXFHpebFVHeTkXYnnN83PkrV3D3YzdxejtX7BinxeJ+UzTnO1KS7xidEv8Bd8kTsxA4X1fzLDA94Mnm8LcWy4PVNMYrkk7Gw2IrFm04b1IaGGBxqUdiz0ttTu7Edde+hfon2zVeW7Z4egf/rsUinid6VXXHdi72sadWu5PSp7Dcxp2Rbbd688030bNnTzRr1gxXr17FvffeiwMHDiAxMRFff/21FjL6JEIViadQaFiJJJ3Z5Pi3Qllsipy793rreyaUj1IGLK0dHi1w31k4v19SxyIzfNV7XH+7y2qxeJ2vuxtQ5KKH86nYh4Pju8WOAJErnpp+lI7yyc0luQqwu+DO7hMBFotLPVKabnfyOjo7e+v4XFWW7tqk02841xWnmyrgqYikTPE6h/C8W753sgBs7l8khmzlpk6dOti5cycWLFiAXbt24dKlS3jwwQcxZMgQnoMxUY1Qpy/UQDVoO6IVXc86qmWDsHVWfMVQfoegxgDrHIe7KF3fLy9+qf6pQgOOO8uUmBwuyo2GlhstlB2xDwfHfBRqKxwnvy2quXmZszXQ22elBHb/8cFPkxZt2l2Uju/zti5a4MFyI/AhwLdgO/7tffqdy9Htx4akDzWnCxr58VrcWL5Y1Hm88jgKCgrCfffdp7YsPotQwQvVWbkDtBJ59NyQSlsrlO2/jp2fhOfcKR7e7q/j9Nu95Ua6PMLPe5+p7hYxiNULpXnq9jkPv9VALE5ppnh5Eqm5BFZJ25HzrMVDeFfLjfS4peaGe+VG/N1SRfGmzYgpl4rKReRvIaTls3RlSQmepi5Zwyvl5tSpU/jjjz9QUFAAq9XKu/fkk0+qIpivIzgtxTOdq4NcfxMt0HLbc1s+8r/GPTd212kW9XGXbNfyl2dtEhuUPXU+HOe+8xN73jlPhYKxuLeJEHKsId4kSc3BhedzIfNZOeEtFvefO0osN9KVPXcfA+4sN67P2axnjm8OcLLEOEvl4nMD8fzXa3pGzspDpUgpJjPt0ixbuZk3bx4eeeQRhISEICEhwUmbtZByIxFPA75abUewvsp0HFMqipAC4oVIkp9zMfsKtFp3llyvHYqdpj7cdoBeWG54CpyCCuIufeJKk+t1F4dSryXSF7n5KDddRp+p4w1VlhvhlAopxFUOxfyrYlmphuXGnWIh9Jjd0sTzJ7bI87mxWGCxqD+t7/ys2/boME5oPSUkxVdH7F0stn3Zys2kSZMwefJkTJgwAQH+sFuaCgh/5bq/ppaGLNpwPEQv6kjnBbYG6v7L0Mu4BSKV9FWlcWv02JE6/ZY07eNFmcid/pIer4Dl0dvpPC8UPSWITWGKNhWZ8qi5d5mYr5AWuKuDzmmyWFyVFqU6nbvkObZpKZZgwQ8aF6XC/fvdGVdlW9FE+nZNHIo1Uq6dfZBYR7Z2UlJSgkGDBpFiIwNhnxsPg4OGlciibfQuaGlZFXIoDpSpKFT9do3TW1lsuEu3i/OxzBKROtUn7FAsHp6F1RB6mr4dv4zFssVYnxsFFjpZ7xHPd4tFH4dit6ulLMJ/A8L9qzdFIMUK7C6st3izepEvi7Ol2ks5PDxXpdxIt+wajWwN5cEHH8TixYu1kMWv8GQO13RaSme0XS117b+8r3F5025aIWufG5nTUor2uXFTK5Rki1mmY9TKRzFUXQru+LdMWeVYkCxVy6UE4TjXNMnyo5O6z43EjwEpHwZCdVG2FRNO+a/SelY5xSh3iwhA2z6fPRVGHNnTUtOnT8dtt92GpUuXomXLlggO5u8uOnPmTNWE82UEvxJE/laC2N4deqLlQZZC/jySlk86/9ZARPeWG6ffKsUtJR6nNQD8572c7gLAhiYtAUfRPVUVb6xI6u5z4/2zcixInqYcnJUFiwWql7fbaSmHz3AXxUrgQSHFzrksXbPHVftx9LlRa4pQzqNBUszQKiGlOBk00IjilXKzbNkyNGlStS20O42aEEfYZ8H9fW8QqrBSYlZTFrt1RYPqYXH6LyCwQ7HAc84KkGNHp8q0ghsTLiBtxYdLlDIVOOdnAJtzqLt9bqQXkovPhdejnc79hkMatbDcqGnBUmahk4fYmzhwLoqArNVSEiVx76PmWGbOzwm8075aqvrdHhVZAZ1JrdVSYn42ntobf4dikbjVsvIrWC3F4sjv1Q7Fc+fOxf3336+BOIQN1SqLoHlWnmVDqSx264oGTUCok3G+ZsRy+KqO0f19+XHKH5Tl+9zIlUpavCzBG6QcfW5Ukl9Vh2IFz8qy3MB9v+CssAVaXHcoFpdDshiiyJ1KtL2Td/qCc7/glAIha64eq4Pc5Y+03dalx+dBEtnvYhnZPjehoaHo3Lmz54CEHamDuhQtXS30tLK5a6BK+71qq5DDwO9Fh6CF1UzOUnC5X4LeKiFCq1x49yXWVaFwqik3Onag/HxUJwGqrlbRKy8s7qY6Xc+RMnSHYgl7Lgn63Hgjk+PfKk1LyZHEMd3iC1/dK21q4W4TPxaVHtnKzZgxY/Duu+9qIYvP4o0fg2pLwYXeA33NiFpWfPtqKYdr3uzqqQXuHYqdp6U8x6eaI6w7y43EHkFwKkClTlVzq5pa+SiCmkOLkn5Ajo5lufY/wXiu/Y8XXsbIIVUMqTt6u05LuT4n6HPjMu3kfmq4ysnaIhhebrl4qxg5fhhKfU4rC6rFoo31XStkKzebNm3CZ599hvr166Nv377o378/7583vP/++8jIyEBYWBiysrKwadMmSc8tWLAAFosF/fr18+q9LMOiJuwtclYNyY/7WjwyFUO5Kye8wf3qD/5vSfPdjh28iAYnxerkzidEuuVGKF5Jj7rGpXNd503vabCZJivHL8jx/fHsUMz/HWhx3cRPKe6S6vZsKYHwwqulvJiWcvot9Ldc5DwqaYdildqP3D6IdWT73MTGxnqtxAixcOFCjBs3DnPmzEFWVhZmzZqFnj17Yv/+/UhOThZ9Ljc3F8888wy6dOmimiy+CBOrpXQ5fkH8C0fKDsVa4C7dznck7Q7q8JTUFWjCFhZ54UVxiohpnxuRgUnKJn5yYcfnRjUxFB6/IC2c1FlcKQdn2jcolmO9crHs6NNXumv7knYoVlked4jKwKDWI1u5+fTTT1UVYObMmXjooYcwYsQIAMCcOXPw888/Y+7cuXj++ecFn6msrMSQIUMwdepUrFu3DoWFharKZBRaVBChhiPpADS+KUQRQtYVtZASp+DUnMaN0dOXsLvVWlKQqi/KPRVc6qAlHMy70VToi1kvaLVUFZ4GcqEdiqXLocJqKTfTUoLvFDhbyuP7BTo6sfxXUi5yDuCUdDyISnVYmuWGPSVGDEO3GS4rK8PWrVuRk5NjvxYQEICcnBxs2LBB9LmXXnoJycnJePDBBz2+o7S0FMXFxbx/rCJmAlWCYIWVaelUOs9avVrKFeUOxWw2Ngssqk/HqeX0rJrlxjleli03Djgm0XHwUEt8VX1udCoPi8V9fXVWiAMDpK+WkiyDm3uOr3c9xNX1SasK5jM1p6W8/VaU4gPnYgX2siFKUUJ1PMdTMbItN23bthXZo8WCsLAwNGzYEPfffz+6d+/uMa6zZ8+isrISKSkpvOspKSnYt2+f4DN//PEHPvnkE+zYsUOSvNOnT8fUqVMlhdUKqQORFg7Fgu/ROH5nNN2h2Mvn9NhNV6qDJCC/Q1Iy1afG8QuCB2l6K5Bz3BrXTfVWvQijqs+Nsokp6e+xiLcloYMztZmWcqNcuQknd+pV/P1Ov2EBeAdnSre4yHmPO7zZAFWrnq3q5HjzaDeyLTe33norDh8+jBo1aqB79+7o3r07IiMjcejQIXTo0AGnT59GTk4OfvjhB9WFvXjxIoYOHYqPPvoIiYmJkp6ZMGECioqK7P+OHz+uulxqoeZhlTZY+Jp29/WhNJneKk6uh+ap32jd6x9O01IS4nOUWckOxe6XgktDKJx5jl9w8F3SxKFY/jPiAnj/qLzjFzwoFy5LwdXvW9zltaPCKEWvl5J2j/JbtOmT5SwmkLJDsa5jhXl0G/mWm7Nnz+Lpp5/GpEmTeNdfeeUVHD16FL/99humTJmCl19+GXfccYfbuBITExEYGIj8/Hze9fz8fKSmprqEP3ToEHJzc9G3b1/7Neu1veSDgoKwf/9+NGjQgPdMaGgoQkNDZaWRBbSsQ3rP5GhpuZFkwJDpd6IWciw3UhQDxzDe7lAMuE+7vB2K+fF4m6VGzizy9xFRp06oqeQpm5aSJ4e7V7kevyCnnih/v9tpKTd1XO4RFM7ycCJCuTvCRDBukWXknj6q+HufCYf1fKyEejDqBSCIbMvNokWLMHjwYJfrgwYNwqJFiwAAgwcPxv79+z3GFRISgszMTKxcudJ+zWq1YuXKlcjOznYJ37RpU+zevRs7duyw/7v99tvRvXt37NixA2lpaXKTowuSv4ZV8qlwRNjlxrNDsZqme3sD1aBleOtQrDVVDsXiwknZRdkZnnIjMS+d4xU6BJEvl6RoBSu1atNSOnagWrxLzdVSujkUW+Q5FMsTRKpDsZsoHP6Wkie2tiIvD1zjFTt+QU3U3qHYazk8vQemMtzIt9yEhYVh/fr1aNiwIe/6+vXrERYWBqBKQbH97Ylx48Zh+PDhaN++PTp27IhZs2bh8uXL9tVTw4YNQ+3atTF9+nSEhYWhRYsWvOdjY2MBwOW6GbGI/K0EwWXQEiLnf10og0WHYq0VHotF3vELak1LScH92VIK4jXNtFT1346Dh2oOxaZcCm7xMC3lGpnaO+G6s2I4vl/QN8YlvAryWJzOAXf4oSjtMgrVu1PBvXQolvCYllZ4tZGt3DzxxBMYNWoUtm7dig4dOgAANm/ejI8//hj/+c9/AADLli1DmzZtJMV3zz334MyZM5g8eTLy8vLQpk0bLF261O5kfOzYMQRI3TaVUaTWB60dHXnv0jZ6HloWn7fpUGM1hSfkORR7jo+v3HiXcosHXwklxy+ohfZ1v/oFmuxQzMq0lErv4SC2pYC6cki1HDk72Qo9J8nnxvn9Ar/FZJJbxN6ulvJm4YCmOxSbR7eRr9xMnDgR9erVw3vvvYcvvvgCANCkSRN89NFHuPfeewEAo0aNwqOPPio5ztGjR2P06NGC99asWeP22Xnz5kl+D/t4nl9V5S0M+dwoFUVKPgl/dcoL7w3uHanl2274JxyLzL87f9UK+iOIv0PR8Qve+tzobOyWs2eKN7Kp60+sYFpKxVFOq/OKHJF6cKecHYoVbeJnca4rjv5Z0uOV805nJCk3qk1LeU6UmVZLyVZuAGDIkCEYMmSI6P3w8HCvBfJntFmW6t1zalqRbA1Ui/R5Oz2j9QyKxYOZ38WhWIKDopVnufFSMHg4fkHBEl9vHWn1ULbFplm1GLDYcSiW8R4P95UYOiUvBZcYhxRnem8UO6Hz3tydt+UtvE38PISV4vPjenCmdpjJcuPVhEFhYaF9Gur8+fMAgG3btuHkyZOqCucrGFkfxHYo1lMod32R0obo/VJw59Ufjn+rkzmy9gKRkBOOg6ZUc7Vs87mCcKp9zWpQOcXyV5sdilWP0ivkDMCe6rwey/y9LQqpB2d6836x6SQlZSwnmZIMN6o5aHp4j0qv0QvZlptdu3YhJycHMTExyM3NxciRIxEfH48lS5bg2LFj+Pzzz7WQ0y/QZv7f9Zre2rfRU2xCbVaP8cddx+TNainHMIp2KHa7Wkp6vC5+Q4asS5MPb6rB4fNOPYdi9fJB0WopFS03wtspSJVD4mopiQ7Frs8Jhbf/JendYvLwj0pwtPJ5v8xe6/5XSz3UTA7Fsi0348aNw/33348DBw7wVkT17t0ba9euVVU4X0HyDsUavFusnnv6OuY1RoWS2RwAtfgi93q1lNbTUhaZDsUS4lRr0FRjtZSQY7JefgiK49fcoVi9uHSblnJnXeWUWW7UdiiW8pwkeZ2ttwLxiomkZvehdN8p1xBerpby9B6LhDMJGUK2crN582Y88sgjLtdr166NvLw8VYQifAstHYqlHaIncE0XB0np9yT1xSrJoMrxC6p1qfqbu8WdRLVXHuWiJG/UlEMPm5y7tMr1E6vexE+ZAGqtluK/xtEaJFsk1zA6ahwm0m3kKzehoaGCh0/++++/SEpKUkUoX8ObpeBqIbzPjb6b+Nme18ahmE3LDeBJqXN2ApTgc6OSM4e7WORkp0s8DM9KiVkNNfG5kbl7rTu0mn50eY+HYUuR5UaqQ7GXlhs1wgPCeSCeLzKnpdz0p5Lbo4go3nwoCeFJubdAX0VKKbKVm9tvvx0vvfQSysvLAVQl9tixYxg/fjzuuusu1QU0I7Vj+avF2tWNEwwXFszP/sYpUR7jjgkPtv/dIYMfb6PkSJfwtzRzPcYCAOon1rD/fX39eJf72Q0S7H/f0FD4HK/rakbb/+7Vouo9gzvWdQmXFFV1/EUnhzht2JrT3Zl1eNcHtq/6PSw7XfDdNpo5yGDjtla1eL9tcfRtXX29oVNetagdY//7lmb8g1zlkJ4QUfWuVrXQQySe4EAL4muE8K61TYvF8Gty9m4pXGb1HMpMHPe+PJ0aJGDAtbxuWzcWANCvbW0AQJOUKHRvkuwS481Nq67ZyhEAbmjkWieErtlIcEqvO/o6lZ8aRIVVuxdeX7+6HqZEh/LKrGtj/gdazxbCZeEOx3rmji5u8suG3KGk/7WyvLlpMm5v4ypH09SqPqalQ30H3CsWWfXjMaiDa7t2ZninDMHrHetV9y+JkVV1yLEfc6ZufITLtRa1q9q5Yx10R+drfVazWq79gxiuS8EtPMuwYz9ZN15KW3QdCwD3ZXpbq5pOYatDZ9d37T+F4rupaXUbvl+kTJoL5Eu3JsLGiTpxVWno1bKmb58K/uabb+Luu+9GcnIyrly5gm7duiEvLw/Z2dmYNm2aFjKajl+e7ILdJ4tQcPEqasaE8wZOR/4cfxMOn72MmjFhKCwpR5pAowaAO9vWxtDsdFRUcjwFZt6Ijth5vBAxEcGoERKECiuHnJm/2+8/27MJHryhnkt8gRYgOToMPz95A6LDgpEQGYIdxwrRKCUKm3PPIyU6DJnp1YpTlkOjCg60YEKv69CjeQpiI0Lw3bYTyKqfgLrxEbjv+gtonxGH53o2wfc7TiIxMhRp8RFIia7yzWqfEY/5I7OQe+4yXvhuD0+mB26oh+a1o9E0NRr/nC5G+2uK28Q+zXDjtUY3Z81hbMo9b39mwcPXI8NhwF/3XHcUXSlHi9ox+OmJGxAWHIiC4qvocK1zfePuVujSMBGNUiJR61qns/75m3D2UikaJFXna68WqVj48PW458ON9msbJ9yMXScKUXilHHXiwnH+chkCLBZk10/AycIr9s76x9E34J/TxeiYEQ+LBVj0SDbGLtyBk4VXAADv39sOWfXjkRgZih9Hd8bRcyWoERqILo2SwHFAj+apvLx3xLHMvOHbRzshMz0ObevGoWWdGLSqEwsAGNKxLhomRaJ57WhEhwXjswc6Yt/pYqTFRyAmPNiunC8f2xXrD51DclQo2me4KsSPdKsv+u4fRnfGDa+tliTn3Zl1kBYfgdSYMBw7X4Lhczfx7s8e0g7Na8XgUmkFAKCkrAKBARZcKClDWYUVtWMjEBsRjLziq+A4IL5GMMKCA/HH+O4oLKmuHyVllWiUEsUrs76ta2H7sQtonBqFQwWXeAOzO9Y91x0nC6+A44AsD8+kJ0Rg+p0t0aZuLM5cLMWuE0VolBKJE+ev4J1VB7DrRBEAYPUzN3pc9vzfoZkItFjsfUCjlEjcnVkHbevGITQoAAk1QvHP6WK8vfIAAGBE5wykxUegVZ1YHCy4hH7v/+mSjg/XHsYXG4/ar7WrG4fWdWLRNi0WsFQr2Y5f+l+NzLK3M2da1I7B1w9dj7ziK+jVoiY2HD6HBomR6PoGvz7YovvfE1XlcV1qNFq/9BuAqjoxPDvD5aPExppnbsTVikokRobi6LnLyEyPv5bXNfC/0TcgPlK6cm0j0MJ3KG5ZJxbfPdYJtWLDkRQVil+e7ILDZy8hNToMp4uuokFSJApLytCmbiz2nCzGuUul6NRA2gHPNt4c2BpP3twI/+ZfROs6sbyPk7Z147DksU6oI6AwOeL4cfaf3tfhlmYpyEyPw87jhWiQHIl/8y4iLT4CXV6vzv/YiGDc0LBauZl7f3scOVuC21rVRFhQIP7Js/VpFqx8uhv+PHgWB/Iv8eoJa8hWbmJiYrB8+XL8+eef2LlzJy5duoR27dohJydHC/lMSUxEsNuvWBsJkaFIuPYlU0d4PANQ9bUiZP2pERqETg5WlVPXBlAbd7SphbDgQJfnbKb45rWqlS5bPL1b1nQJ70hsRAgecFCYhmZn2P+2fS2FBgViRGdXpcoWpnPDRBflJjDAYu8IOjukKSQoADc1rWqsH687wnvGWQlIi4+A7XQxm0Lp2BmGBQdiYAf++WO1YsPtio4Ni8XCU+hubJKE1JgwpMYIf8XHOVglYsKDeZaBjvXiEVcj2K7c9HH4MmtVJ9auYNjoLGIls+FYZkK428TPll+OeQ1U7RviaKnr1jgJ3Rq7fsXFRoS4rR+hQa51Daj6eo0KFVfInE3djvIkC3ypt0uPsyvM7nD+WKgTF2FvZ44fHI5lFh4SaG8LNiuDFNLiI0Q/TpwJDLDY35GeEIT0hCploWlqNBZtOY5dqFJupFjqEmqEuCiajn3CrS1SUTs23K7cBFiqy75WrGsepsVHoE+rmi6DlqPMNhyNgs73nHGsX0LWQaB6KslWHlfLK+33ggIs6N5U+DkAvI8c53JrWUe4zThPwjirkQEWV5++tg79cLNa0aKWIbdKseMUldNbQ4MC0Tglym7FP36+pDqsRXgWQMjiZCMkKMDep9j6tMSGoTh3qZT3TPv0eF489RIj7f0uwLd2NkiKRIOkSLy+dJ94GhnAq038AKBz587o3LmzmrIQKiN6iixD86ZKJNErFUrfo+eRSywe72SxwOtMZKiqMomU/BHbw0nMsdWoLHf2OzN6y4qAAItXxx+IxO7wl/upY88xSL8j+oQfNCzJPjcbNmzATz/9xLv2+eefo169ekhOTsbDDz+M0tJSkacJJUjeJ8JZgxcJx9K8qZyx2Dkb/KGBsozUeslxCjZoE3Ty9F30rNJ8hcZR0TEmh13at8Yl7fo+PgEWiyangsvJXimbi3pTXEKP+Fq7kqzcvPTSS/j777/tv3fv3o0HH3wQOTk5eP755/G///0P06dP10RIf0eNIxQcMdNGTI64fNnp9F6lnb2e1hS1Vk6ojZKDPgl3eM4gMasMa1nrMk2ku+WG/zswQNpRD7LfIyesBspVVbwqRsYokpWbHTt24Oabb7b/XrBgAbKysvDRRx9h3LhxeOedd7Bo0SJNhPR3JG+CJbH6m7ViGzVQK56WUkUKc2PSKufTKLUEqN4e3UaogZLhIUrn1VJK+k3RqUEVkuVNFIIWUZnCsD6OSFZuLly4gJSUagej33//Hb169bL/7tChA44fP66udIQi9Nzbw1sU+dzolAyl71FzO35POIvKSlGrKgcjaWIBST43MjaNk4PaG2F6cvBVG0/TYM7TUprJ4W7HcMe/RURRaxpRbiysnxAuWblJSUnBkSNVq1XKysqwbds2XH/99fb7Fy9eRHCwd0tUCfd4uwmWeGNQJg8rkM+NKyxaiaq2sXfjDummGP2tiOUOGFJCi/YDCuLUAueNAnVv387TUhopN1773IiUjFcS+kG7kqzc9O7dG88//zzWrVuHCRMmICIiAl26dLHf37VrFxo0aKCJkP6Ot19I4g7F7NRsWQ7FmklBaI26DsXs1F8zILY7LmsfP54cfFV/n4fVWc5LwZXUO299naRY3bxyKBZ4hqFhQRUkLwV/+eWX0b9/f3Tr1g2RkZH47LPPEBJSvb/H3Llz0aNHD02EJLxE1KFYXzFUwzDtxjwZ5iwpCw7FilZLmSfrVUFueqUdrCj2xc9W5hruUOz0W92l4N6hVR6wVfLaIFm5SUxMxNq1a1FUVITIyEgEBvI37Fq8eDEiI4V3jySUoXwfBD4sWW7koMdhl0Io97lRRw7WkHcmoZerpbx6inEMrA+8chDNXGm5rna9dhefFl2WpzoZ4LRDsVoyqL2i0Zu2JaQUy54SZbxxerVDsRDx8dK2KSf0Q/SLjaFayY4k4ihfLWXcaMZKUavpV8NKmlhAic+NUlRfLOUyTaRtQXt6n9AOxergqDC5f4E0h2IVRHJ+mfrBdUf2wZmE/khebSPRodi001ImxVctN1Kpcij29lmqrEoRGyBZ97nRGy2npdxZgNwmm1de6hWMP7QqUm58GNHVEAzVbCU7FJsFI8VmJc/cdcxuV1JJvOYraGHFMstqKT23TBDC1aFYmx2Kee/0eN/z+8mhWBhSbkyA2pv4mdXnxijMlF2syuq95UZVMXwOaW1em+lpXX1u1H2VJAIsvlv/WHMm1wJSbkyA98cvsO9zIwejvuuUdgRGfpFqWdRSk6VktRShP4adLeXlPbUQ2sRPtWkpkb8B6Y7U4hY49WWU9gDbjZqUGxMg1SHVZRM/kXAs+dzIEcUoJUHxail1xDA1bqel3DobC6zqYLxTVYIWK1bkTktJR+UdinVuKK4H8fJ/u+xQrMWKLQ9x8pUisY9Vdd4r+/gF+a/VFVJufBixumr03g2O+MXA7xeJFMeHdRGv0Ls68B2KPS9tNqq4nHcoNprAAH2OX3CHpH2MqH0JQsqNCfB2nxtVt+tmALa6PnPA2HhBeEIT64BYP6CeJcAX0HKHYm9xfKOaW0oIWm5Ui50NSLnxQ3zZrK8FZpqW8gdHQbOnUE35pR2cKfK30nqtukOxtAMk9cKi4tlSfN8ZF68bZXF7s4mf6VuRZ0i5MQGSV0tJdLox2tTqLWSFkI+mDsUqxWPO2ug9rFdjowY+q94+N06/ndMdqMPxCx6XgkuwHGm1c7La4fWGlBsfxgyb+MlyKNZMCveYebUUC6idfNY7VT2RUjelrLjxBq13KNYboW9DrfLOEfdL4CWUrxfvVCMtrFt/SLkxAd773AgTwJB2Y4ph30TTUoS50aJlyv3ipx2Kq3BZLaUobgdHbnkPeg7izWopwWvsjAtqQMqNKfCu1Yvvc6NEFgMxuvfzEiPFZiHLTFvfTIDcpeD8QZatgjG6qjr3lxYLf2Wp0bmlrkOx0BYLqkXPBKTc+BBSK6dZfW6Mwky5Zcailb+/hgkTqRFKylu5Q7F++9wYsQgiIMCieXtSJ13eOBT7PqTcmACvdygWuc7QrJQsjP6y8xafPRWcBbMQIQslm/5pjd6+aS6b+Dndr1oKrsVqKSc5pD7H2NJ91j+kSLkxAd4fvyBynSG9XZZDsUFjKS2dV4ancpOduz5cHFpYsVjbrI9VXB2K+T43WnQ/6jj2mue9ekLKjQmQfPyCU3UT6/hYstyY4dtfaXaRgYNwRG8LBW9XYpHrvPASa7zqq6WMdih2yg/nTfxY20HZhjcfX+RzQ/gkZrVEGL1U1FsY7RN1w6TVzWcQy37WlHbWlAeLxcLrKxkTj/AAKTcmQHKjIodiTTBTdplIVK8xU3kIYeTHBct559b3RDcpqnG23FSqtMugs2VMqSWP4SI1FFJuTIDaHwwsTUvJgb6c2EK14jBpffQWNY8ZUHQquMh1oyykeltuPKXTeZ8bLeRTZa0UORQLQsqNCZC8iZ9Uy41ZtRuDUG6+J61MTaj2yoNvKXDwv2FtdGKsmVicVkux2oxZWiDCEqTc+DBiXybBgeZsDKFBxlTXEIXvDQsOVEkS+WiZZ1JrkVHlZka0yCslG/25I1zleh0cKJ72AA2qULCHSKt8btR5l7fHOOjVUzvXO3OOEHyo1zEB0ldLVVMnLhwRIUG8+0/c1BBNU6Nwb1a6itLpx+t3t9L1fRP7XIf6STXwdI8miuJ59962SE+IwHv3tlVJMum8emdL1EusgdfvUj/vHGvlh0MzXe6/O7gq3e8ObgcAGJ6djtZpsagbHyHrPYM71mVuKjWhRogm8T7TswnqJ9XApNuaCd5/9MYGqBkTJitO/gop/r1+bWqhc8MENEmJkikp8OGwTKQnRGDOfe1kPwsAHwxph/SECPRvWxv1k2pgXI/GLmHuu74u2taNRZdGSV69Q4hnejRGo+RIjOxSz+Ve/7a1AQC3NEtBTHgwwoID0adlTXRrnIQ6ceGqyeCIu949KiwYPZun4KamyUiJDhUM41imo7o1kPxeW1rrJdbAhN5NERoUiD6taqJr4ySkJ3huo8xZ/pwI8hyEMBwvzKGzh7gONk/3aKJ4oDaShslR6NIoEesOnNXlfSO71MfILvUVx9O8Vgx+f7a7ChJ5xrnDqZ8UidXP3Kj5e3s0T3W51rd1LfRtXcv+e+odLQAAN7+5hhfOUxc5vX9LDGhfB/0/WF8VnoFOdcW4brjzgz+Re65E1XhTosOw6ukbRe+Pv7UpHu5SH21fXq7K+2YN8l7hblUnVlG97t2yJnq3rOk2zCv9Wnodvxijb2qE0Tc1Erw38542mHlPG96194d4p7xJwmLxON3136HtJUd3d2ZtyWEF03qvhmnVGbLcmADJi6Uc97Mwvv+XhFwxWZ339kfUKgspygpr1dliMU7Jkv1ameHNuuWCGVHfoZi1lmIcpNwQhiK3G2VtLwxCf1jpvs3iKO71idSEamipCJvxo1YPSLkxAVI7UX+o16TcsIM/d6RKVqgorcFy3y23nGj1DeELkHJDmAqV9tEiVEBPPZMFPxtnDKuKspUVh78ZzEd/R81N/PQsXdarEik3JkC6z42mYjCBWaYCCOlosXEdy5hcfMILxFasqXKAJS8+ql02SLkhTAVZbthBT8dT5rpsBQIpnpaSa7nhbURHDcjXMMqnivXpS1JuTAD1R9WQzw1ByIPtIYggtIGUGxMg/dxM3+/GSLchWKjnRlr/tZ7Go6Xg6uNuB2g1LXk0K1UNKTeEqSCzuvlxLkElhz8aCVVFQilqKOp8h2L9GgqLbdIRUm5MgOSl4IxXNjUgnxv3+EMd8Ic0ukOu06jjgCel+bBgGfMrlO8NUP0nFZ0dUm5MAI3n1ZDPjX/C2oDLljQeMJWwhFyMahusVytSbswAjed2yHJD+DtKfG7o28AYeCuaWNcKfARSbghTQT437KDa2VLMfwO6wsp+IlKkkH1+G31N6Yb6+9woj89XIOXGBEjtbPyhYpNu4x5frQMspssoJYDFvCC8R0WXG11hvR6ScmMCaECvhnxu3GPG7JG/KZ02cvgqShyQCXUQs66ocyo4lZcQpNyYAKkDlj90SqTcECygpKUprcKyD87kv13ZywnmMMxyw/h4Q8oNYSpIt3GPKT7iqAx1xRR1giBUhpQbE0A+N9XQuMgORimarH8xao3saTyZ+UUOxfqi+FRw/24OopByYwLIWlENTUu5x1cHftY6cIuF2iUhHbFdhFVZLWXUPjeMtUlnSLkxAdLPlvJ9SLlxjz98dbPeqbKG3H1ufFVB9lmouAQh5cZH8dUBgHQbH8AH6qZZFQBqPuxBZaINTCg377//PjIyMhAWFoasrCxs2rRJNOxHH32ELl26IC4uDnFxccjJyXEb3p/whyWBpNy4xxSDrlMZSqm3pkiXTtDSeRMiuhRchYMzqXwFMVy5WbhwIcaNG4cpU6Zg27ZtaN26NXr27ImCggLB8GvWrMHgwYOxevVqbNiwAWlpaejRowdOnjyps+T6QQN6NTQtxQ5GlQQrfTlVRUINlG8NQAhhuHIzc+ZMPPTQQxgxYgSaNWuGOXPmICIiAnPnzhUMP3/+fDz22GNo06YNmjZtio8//hhWqxUrV67UWXLCCEi5cY8Zv+IkHSHAWLqMlEf+PjeMZR5RjSrHLxjlUMx2vTJUuSkrK8PWrVuRk5NjvxYQEICcnBxs2LBBUhwlJSUoLy9HfHy84P3S0lIUFxfz/pkPiUvBNZaCBejgTPf4g+7HeqeqNUqmpfyhfrAIb4WUgXL4E4YqN2fPnkVlZSVSUlJ411NSUpCXlycpjvHjx6NWrVo8BcmR6dOnIyYmxv4vLS1Nsdx6Qx1SNZQXhNnRe0UbDaaEP2L4tJQSZsyYgQULFuC7775DWFiYYJgJEyagqKjI/u/48eM6S6kcyUvB/aAXo1PB3eOrdcBX0+UNcrPC3y1drGPW7RtYr1VBRr48MTERgYGByM/P513Pz89Hamqq22f/7//+DzNmzMCKFSvQqlUr0XChoaEIDQ1VRV7CeMjnhh3UUjTl77hLEL4B1WXtMNRyExISgszMTJ4zsM05ODs7W/S5119/HS+//DKWLl2K9u3b6yGqoUgdRPzhC418btzjqzWANadYQx2KZZ/yXY1ZrQRmR+xUcMC8U+2sDzeGWm4AYNy4cRg+fDjat2+Pjh07YtasWbh8+TJGjBgBABg2bBhq166N6dOnAwBee+01TJ48GV999RUyMjLsvjmRkZGIjIw0LB1a4k3dZ20wUAuy3LjHH3KH9U5VT6TkBeUX4Y8Yrtzcc889OHPmDCZPnoy8vDy0adMGS5cutTsZHzt2DAEB1Qam2bNno6ysDHfffTcvnilTpuDFF1/UU3TdoPHcAcoLggHM9PHgaOmhvoTwFwxXbgBg9OjRGD16tOC9NWvW8H7n5uZqL5BGZNWLx19HzqNF7WhZz7VJi5X9rrgawbKfcUd8jRCcv1yGzg0SVI23pcy8uKFRIn7dk4eaMcIO5P5Odv0EHD1XghohgZq/K6tePPblXURQgNxTp/l0rBePv0+536IhLkLd+qwG2Q0S8M3WE4gK07cbdczt6HD18yW+Roj9b2pn6iDWQtITaqBr4yQs35uPtPhwr+IODqyOPTJUv7pYP4ntmRImlBt/4YMh7bB46wn0b1dbUvgV47pizf4zuO/6dMnv+PT+DrhYWoGaMd41FDF+HN0ZP+86jcFZdVWJb+lTXfDHgbMY3ilD1nMz+rdCm7RY9G1dSxU5fI2JtzVDvcQa6NWipubvGt+rKWrHhaNHM/fO/554tmcT1IwJwy1u4kmODsO7g9siIiTQEN+yFeO64bH5W/Fv/iX7tRdvb45GyZHo3VL7vHYkIMCCufe3x+XSSiRHqa98pMaE4ZV+LfDTrlOYObCN6vETwKJHsnHozCV0rBePJilRWLD5GG5v412fFhoUiA+HZqLCyiE2IsTzAyrRtVEiXunXAtfVjNLtnXKwcH62tra4uBgxMTEoKipCdLQ8qwFBEMrp/n9rcOTsZQBA7ow+BksjnUWbj+O5b3cBAA5M64XgQHnrMTKe/xkAUCcuHH+Mv0l1+aS8+93BbenDwADOXSpF5isrAFR9tDZMZlMhYB0547ep97khCIIgpONXX7KEX0PKDUEQhBQsgn8ShEf8YZsO1iDlhiAIgiAIn4KUG4IgCIIgfApSbgiCIGRi1mkGP1s/wgzmrC3mhpQbgiB0hQZYgiC0hpQbgiAICdDXN0GYB1JuCILQFbNO6Thi/hQQeuIDVd50kHJDEARBEIRPQcoNQRCETJR8iRvpckTuToS/QMoNQRC6Qg7FBEFoDSk3BEEQEvAFXyHCGCzkpaU7pNwQBEHIhBQdgmAbUm4IgiD8BI6OziT8BFJuCIIgCEJLyNCnO6TcEARB+Anky034C6TcEARBEAThU5ByQxAEQRCET0HKDUEQhATIbYLwFlpcpz+k3BAEQfgJ5HND+Auk3BAEoSs0vhIEoTWk3BAEQRCEhtCslP6QckMQBEEQhE9Byg1BEIQEfMEplKYECX+BlBuCIAiC0BA6i0x/SLkhCIIgCMKnIOWGIAhCRzhaj00QmkPKDUEQhJ9AihXhL5ByQxAEIQG13CaM9L8g1cYYyONGf0i5IQiC0BGynhCE9pByQxAEQRCET0HKDUEQhI/TNDUKAHBjkySDJfFPaCW4/gQZLQBBEAShLT89cQOulFciKizYaFEIQhdIuSEIQlfM6nJiMbFbaFBgAKICyVBP+A9U2wmCIAiC8ClIuSEIgiAIDTGz1c+skHJDEAShIyadlSMIU0HKDUEQBEEQPgUpNwRBEBJQbYdidaIhTAQtBdcfUm4IgiB0hKalCEJ7SLkhCIIgCMKnIOWGIAhCR2iGgiC0h5QbgiAIHaFpKYLQHlJuCILQFY6Gd4IgNIaUG4IgCIIgfApSbgiCIAhCQ2gpuP6QckMQBEEQhE9Byg1BEIQELPT5TRCmgZQbgiAIgtAQOjhTf0i5IQiC0BGOFosRhOaQckMQBEEQhE9Byg1BEARBED4FKTcEQRASIK8JwlvIF11/SLkhCIIgCMKnIOWGIAiCIAifgpQbgiAIgtAQmpXSH1JuCILQFVoKTRCE1pByQxAEIQFyCiUI80DKDUEQBEFoCB3doT+k3BAEQegIB5qXIwitYUK5ef/995GRkYGwsDBkZWVh06ZNbsMvXrwYTZs2RVhYGFq2bIlffvlFJ0kJgiAIgmAdw5WbhQsXYty4cZgyZQq2bduG1q1bo2fPnigoKBAMv379egwePBgPPvggtm/fjn79+qFfv37Ys2ePzpITBEEQBMEihis3M2fOxEMPPYQRI0agWbNmmDNnDiIiIjB37lzB8G+//TZuvfVWPPvss7juuuvw8ssvo127dnjvvfd0lpwgCIIgCBYxVLkpKyvD1q1bkZOTY78WEBCAnJwcbNiwQfCZDRs28MIDQM+ePUXDEwRBEAThXwQZ+fKzZ8+isrISKSkpvOspKSnYt2+f4DN5eXmC4fPy8gTDl5aWorS01P67qKgIAFBcXKxEdIIgvKRWBIdjeSUAzNUOgyqvwlrqvdy2Z2uFh5oq3YRyrFbOXv5lJZdRXExO5d5gazechM2yDFVu9GD69OmYOnWqy/W0tDQDpCEIwpGYWUZL4B1K5D4OIGacWpIQZqP5LKMlMD8XL15ETEyM2zCGKjeJiYkIDAxEfn4+73p+fj5SU1MFn0lNTZUVfsKECRg3rronsVqtOH/+PBISElTfe6C4uBhpaWk4fvw4oqOjVY2bZSjdlG5/gNJN6fYHWE43x3G4ePEiatWq5TGsocpNSEgIMjMzsXLlSvTr1w9AlfKxcuVKjB49WvCZ7OxsrFy5Ek899ZT92vLly5GdnS0YPjQ0FKGhobxrsbGxaogvSnR0NHOVQg8o3f4Fpdu/oHT7F6ym25PFxobh01Ljxo3D8OHD0b59e3Ts2BGzZs3C5cuXMWLECADAsGHDULt2bUyfPh0AMGbMGHTr1g1vvvkm+vTpgwULFmDLli348MMPjUwGQRAEQRCMYLhyc8899+DMmTOYPHky8vLy0KZNGyxdutTuNHzs2DEEBFQv6urUqRO++uorTJw4Ef/5z3/QqFEjfP/992jRooVRSSAIgiAIgiEMV24AYPTo0aLTUGvWrHG5NmDAAAwYMEBjqeQTGhqKKVOmuEyD+TqUbkq3P0DppnT7A76SbgsnZU0VQRAEQRCESTB8h2KCIAiCIAg1IeWGIAiCIAifgpQbgiAIgiB8ClJuCIIgCILwKUi5UYn3338fGRkZCAsLQ1ZWFjZt2mS0SF4zffp0dOjQAVFRUUhOTka/fv2wf/9+XpirV6/i8ccfR0JCAiIjI3HXXXe57Bx97Ngx9OnTBxEREUhOTsazzz6LiooKPZOiiBkzZsBisfA2jPTldJ88eRL33XcfEhISEB4ejpYtW2LLli32+xzHYfLkyahZsybCw8ORk5ODAwcO8OI4f/48hgwZgujoaMTGxuLBBx/EpUuX9E6KZCorKzFp0iTUq1cP4eHhaNCgAV5++WXe2TW+kO61a9eib9++qFWrFiwWC77//nvefbXSuGvXLnTp0gVhYWFIS0vD66+/rnXS3OIu3eXl5Rg/fjxatmyJGjVqoFatWhg2bBhOnTrFi8PX0u3MqFGjYLFYMGvWLN51M6abB0coZsGCBVxISAg3d+5c7u+//+YeeughLjY2lsvPzzdaNK/o2bMn9+mnn3J79uzhduzYwfXu3ZurW7cud+nSJXuYUaNGcWlpadzKlSu5LVu2cNdffz3XqVMn+/2KigquRYsWXE5ODrd9+3bul19+4RITE7kJEyYYkSTZbNq0icvIyOBatWrFjRkzxn7dV9N9/vx5Lj09nbv//vu5v/76izt8+DC3bNky7uDBg/YwM2bM4GJiYrjvv/+e27lzJ3f77bdz9erV465cuWIPc+utt3KtW7fmNm7cyK1bt45r2LAhN3jwYCOSJIlp06ZxCQkJ3E8//cQdOXKEW7x4MRcZGcm9/fbb9jC+kO5ffvmFe+GFF7glS5ZwALjvvvuOd1+NNBYVFXEpKSnckCFDuD179nBff/01Fx4ezv33v//VK5kuuEt3YWEhl5OTwy1cuJDbt28ft2HDBq5jx45cZmYmLw5fS7cjS5Ys4Vq3bs3VqlWLe+utt3j3zJhuR0i5UYGOHTtyjz/+uP13ZWUlV6tWLW769OkGSqUeBQUFHADu999/5ziuqlMIDg7mFi9ebA/zzz//cAC4DRs2cBxX1bgCAgK4vLw8e5jZs2dz0dHRXGlpqb4JkMnFixe5Ro0accuXL+e6detmV258Od3jx4/nbrjhBtH7VquVS01N5d544w37tcLCQi40NJT7+uuvOY7juL1793IAuM2bN9vD/Prrr5zFYuFOnjypnfAK6NOnD/fAAw/wrvXv358bMmQIx3G+mW7nwU6tNH7wwQdcXFwcr56PHz+ea9KkicYpkoa7Qd7Gpk2bOADc0aNHOY7z7XSfOHGCq127Nrdnzx4uPT2dp9z4QrppWkohZWVl2Lp1K3JycuzXAgICkJOTgw0bNhgomXoUFRUBAOLj4wEAW7duRXl5OS/NTZs2Rd26de1p3rBhA1q2bGnfaRoAevbsieLiYvz99986Si+fxx9/HH369OGlD/DtdP/4449o3749BgwYgOTkZLRt2xYfffSR/f6RI0eQl5fHS3tMTAyysrJ4aY+NjUX79u3tYXJychAQEIC//vpLv8TIoFOnTli5ciX+/fdfAMDOnTvxxx9/oFevXgB8N92OqJXGDRs2oGvXrggJCbGH6dmzJ/bv348LFy7olBplFBUVwWKx2M8f9NV0W61WDB06FM8++yyaN2/uct8X0k3KjULOnj2LyspK3mAGACkpKcjLyzNIKvWwWq146qmn0LlzZ/sRF3l5eQgJCXE5gNQxzXl5eYJ5YrvHKgsWLMC2bdvsZ5k54svpPnz4MGbPno1GjRph2bJlePTRR/Hkk0/is88+A1Atu7t6npeXh+TkZN79oKAgxMfHM5v2559/HoMGDULTpk0RHByMtm3b4qmnnsKQIUMA+G66HVErjWat+zauXr2K8ePHY/DgwfYDI3013a+99hqCgoLw5JNPCt73hXQzcfwCwS6PP/449uzZgz/++MNoUTTn+PHjGDNmDJYvX46wsDCjxdEVq9WK9u3b49VXXwUAtG3bFnv27MGcOXMwfPhwg6XTjkWLFmH+/Pn46quv0Lx5c+zYsQNPPfUUatWq5dPpJviUl5dj4MCB4DgOs2fPNlocTdm6dSvefvttbNu2DRaLxWhxNIMsNwpJTExEYGCgy4qZ/Px8pKamGiSVOowePRo//fQTVq9ejTp16tivp6amoqysDIWFhbzwjmlOTU0VzBPbPRbZunUrCgoK0K5dOwQFBSEoKAi///473nnnHQQFBSElJcUn0w0ANWvWRLNmzXjXrrvuOhw7dgxAtezu6nlqaioKCgp49ysqKnD+/Hlm0/7ss8/arTctW7bE0KFDMXbsWLvlzlfT7YhaaTRr3bcpNkePHsXy5cvtVhvAN9O9bt06FBQUoG7duvZ+7ujRo3j66aeRkZEBwDfSTcqNQkJCQpCZmYmVK1far1mtVqxcuRLZ2dkGSuY9HMdh9OjR+O6777Bq1SrUq1ePdz8zMxPBwcG8NO/fvx/Hjh2zpzk7Oxu7d+/mNRBbx+E8iLLCzTffjN27d2PHjh32f+3bt8eQIUPsf/tiugGgc+fOLsv9//33X6SnpwMA6tWrh9TUVF7ai4uL8ddff/HSXlhYiK1bt9rDrFq1ClarFVlZWTqkQj4lJSUICOB3g4GBgbBarQB8N92OqJXG7OxsrF27FuXl5fYwy5cvR5MmTRAXF6dTauRhU2wOHDiAFStWICEhgXffF9M9dOhQ7Nq1i9fP1apVC88++yyWLVsGwEfSbbRHsy+wYMECLjQ0lJs3bx63d+9e7uGHH+ZiY2N5K2bMxKOPPsrFxMRwa9as4U6fPm3/V1JSYg8zatQorm7dutyqVau4LVu2cNnZ2Vx2drb9vm1JdI8ePbgdO3ZwS5cu5ZKSkphfEu2M42opjvPddG/atIkLCgripk2bxh04cICbP38+FxERwX355Zf2MDNmzOBiY2O5H374gdu1axd3xx13CC4Xbtu2LffXX39xf/zxB9eoUSOmlkQ7M3z4cK527dr2peBLlizhEhMTueeee84exhfSffHiRW779u3c9u3bOQDczJkzue3bt9tXBamRxsLCQi4lJYUbOnQot2fPHm7BggVcRESEoUuD3aW7rKyMu/3227k6depwO3bs4PV1jiuAfC3dQjivluI4c6bbEVJuVOLdd9/l6taty4WEhHAdO3bkNm7caLRIXgNA8N+nn35qD3PlyhXuscce4+Li4riIiAjuzjvv5E6fPs2LJzc3l+vVqxcXHh7OJSYmck8//TRXXl6uc2qU4azc+HK6//e//3EtWrTgQkNDuaZNm3Iffvgh777VauUmTZrEpaSkcKGhodzNN9/M7d+/nxfm3Llz3ODBg7nIyEguOjqaGzFiBHfx4kU9kyGL4uJibsyYMVzdunW5sLAwrn79+twLL7zAG9x8Id2rV68WbNPDhw/nOE69NO7cuZO74YYbuNDQUK527drcjBkz9EqiIO7SfeTIEdG+bvXq1fY4fC3dQggpN2ZMtyMWjnPYipMgCIIgCMLkkM8NQRAEQRA+BSk3BEEQBEH4FKTcEARBEAThU5ByQxAEQRCET0HKDUEQBEEQPgUpNwRBEARB+BSk3BAEQRAE4VOQckMQBKETFosF33//vdFiEITPQ8oNQfgBZ86cwaOPPoq6desiNDQUqamp6NmzJ/7880+jRVONjIwMzJo1y2gxCIJggCCjBSAIQnvuuusulJWV4bPPPkP9+vWRn5+PlStX4ty5c0aLRiikrKwMISEhRotBEExBlhuC8HEKCwuxbt06vPbaa+jevTvS09PRsWNHTJgwAbfffjsv3MiRI5GUlITo6GjcdNNN2LlzJy+uV155BcnJyYiKisLIkSPx/PPPo02bNvb7999/P/r164dXX30VKSkpiI2NxUsvvYSKigo8++yziI+PR506dfDpp5/y4j1+/DgGDhyI2NhYxMfH44477kBubq5LvP/3f/+HmjVrIiEhAY8//rj9ROIbb7wRR48exdixY2GxWGCxWETzw2Kx4OOPP8add96JiIgINGrUCD/++KP9/rx58xAbG8t75vvvv+fF+eKLL6JNmzaYO3cu6tati8jISDz22GOorKzE66+/jtTUVCQnJ2PatGku7z99+jR69eqF8PBw1K9fH998841XeTFt2jTUqlULTZo0EU0rQfgrpNwQhI8TGRmJyMhIfP/99ygtLRUNN2DAABQUFODXX3/F1q1b0a5dO9x88804f/48AGD+/PmYNm0aXnvtNWzduhV169bF7NmzXeJZtWoVTp06hbVr12LmzJmYMmUKbrvtNsTFxeGvv/7CqFGj8Mgjj+DEiRMAgPLycvTs2RNRUVFYt24d/vzzT0RGRuLWW29FWVmZPd7Vq1fj0KFDWL16NT777DPMmzcP8+bNAwAsWbIEderUwUsvvYTTp0/j9OnTbvNk6tSpGDhwIHbt2oXevXtjyJAh9nRK5dChQ/j111+xdOlSfP311/jkk0/Qp08fnDhxAr///jtee+01TJw4EX/99RfvuUmTJuGuu+7Czp07MWTIEAwaNAj//POPrLxYuXIl9u/fj+XLl+Onn36SJTdB+AVGn9xJEIT2fPPNN1xcXBwXFhbGderUiZswYQK3c+dO+/1169Zx0dHR3NWrV3nPNWjQgPvvf//LcRzHZWVlcY8//jjvfufOnbnWrVvbfw8fPpxLT0/nKisr7deaNGnCdenSxf67oqKCq1GjBvf1119zHMdxX3zxBdekSRPOarXaw5SWlnLh4eHcsmXLePFWVFTYwwwYMIC755577L+FTjYWAgA3ceJE++9Lly5xALhff/2V4ziO+/TTT7mYmBjeM9999x3n2F1OmTKFi4iI4IqLi+3XevbsyWVkZLikffr06bx3jxo1ihd3VlYW9+ijj8rKi5SUFN7J5QRB8CHLDUH4AXfddRdOnTqFH3/8EbfeeivWrFmDdu3a2S0fO3fuxKVLl5CQkGC39ERGRuLIkSM4dOgQAGD//v3o2LEjL17n3wDQvHlzBARUdy0pKSlo2bKl/XdgYCASEhJQUFBgf/fBgwcRFRVlf298fDyuXr1qf7ct3sDAQPvvmjVr2uOQS6tWrex/16hRA9HR0bLjysjIQFRUlP13SkoKmjVr5pJ253izs7NdftssN1LzomXLluRnQxBuIIdigvATwsLCcMstt+CWW27BpEmTMHLkSEyZMgX3338/Ll26hJo1a2LNmjUuzzn7n3giODiY99tisQhes1qtAIBLly4hMzMT8+fPd4krKSnJbby2OOTiLq6AgABwHMe7b/Pt8RSHUhml5kWNGjUkx0kQ/ggpNwThpzRr1sy+50q7du2Ql5eHoKAgZGRkCIZv0qQJNm/ejGHDhtmvbd68WbEc7dq1w8KFC5GcnIzo6Giv4wkJCUFlZaVieZKSknDx4kVcvnzZrkTs2LFDcbw2Nm7cyMvDjRs3om3btgDUywuC8HdoWoogfJxz587hpptuwpdffoldu3bhyJEjWLx4MV5//XXccccdAICcnBxkZ2ejX79++O2335Cbm4v169fjhRdewJYtWwAATzzxBD755BN89tlnOHDgAF555RXs2rXL7cokKQwZMgSJiYm44447sG7dOhw5cgRr1qzBk08+aXc6lkJGRgbWrl2LkydP4uzZs17Lk5WVhYiICPznP//BoUOH8NVXX9mn79Rg8eLFmDt3Lv79919MmTIFmzZtwujRowGolxcE4e+QckMQPk5kZCSysrLw1ltvoWvXrmjRogUmTZqEhx56CO+99x6AqumTX375BV27dsWIESPQuHFjDBo0CEePHkVKSgqAqoF3woQJeOaZZ9CuXTscOXIE999/P8LCwhTJFxERgbVr16Ju3bro378/rrvuOjz44IO4evWqLOvFSy+9hNzcXDRo0IA3hSOX+Ph4fPnll/jll1/QsmVLfP3113jxxRe9js+ZqVOnYsGCBWjVqhU+//xzfP3112jWrBkA9fKCIPwdC+c8uUwQBCGRW265Bampqfjiiy+MFoUgCMIO+dwQBCGJkpISzJkzBz179kRgYCC+/vprrFixAsuXLzdaNIIgCB5kuSEIQhJXrlxB3759sX37dly9ehVNmjTBxIkT0b9/f6NFIwiC4EHKDUEQBEEQPgU5FBMEQRAE4VOQckMQBEEQhE9Byg1BEARBED4FKTcEQRAEQfgUpNwQBEEQBOFTkHJDEARBEIRPQcoNQRAEQRA+BSk3BEEQBEH4FKTcEARBEAThU/w/xiSpLDwmLzsAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.cluster import KMeans\n",
        "from sklearn.mixture import GaussianMixture\n",
        "\n",
        "# Assuming MD_x is the input data\n",
        "\n",
        "# Set the random seed\n",
        "np.random.seed(1234)\n",
        "\n",
        "# StepFlexmix\n",
        "k_values = range(2, 9)\n",
        "AIC_values = []\n",
        "BIC_values = []\n",
        "ICL_values = []\n",
        "\n",
        "for k in k_values:\n",
        "    # K-means clustering\n",
        "    kmeans = KMeans(n_clusters=k, random_state=1234)\n",
        "    kmeans.fit(MD_x)\n",
        "    \n",
        "    # Mixture model\n",
        "    mixture = GaussianMixture(n_components=k, random_state=1234)\n",
        "    mixture.fit(MD_x)\n",
        "    \n",
        "    # Compute information criteria\n",
        "    AIC_values.append(mixture.aic(MD_x))\n",
        "    BIC_values.append(mixture.bic(MD_x))\n",
        "    ICL_values.append(mixture.lower_bound_)\n",
        "\n",
        "# Plot information criteria\n",
        "plt.plot(k_values, AIC_values, label='AIC')\n",
        "plt.plot(k_values, BIC_values, label='BIC')\n",
        "plt.plot(k_values, ICL_values, label='ICL')\n",
        "plt.xlabel('Number of Segments')\n",
        "plt.ylabel('Value of Information Criteria')\n",
        "plt.title('Information Criteria')\n",
        "plt.legend()\n",
        "plt.show()\n",
        "\n",
        "# Get the model for 4 segments\n",
        "num_segments = 4\n",
        "mixture_model = GaussianMixture(n_components=num_segments, random_state=1234)\n",
        "mixture_model.fit(MD_x)\n",
        "\n",
        "# K-means clustering for 4 segments\n",
        "kmeans_model = KMeans(n_clusters=num_segments, random_state=1234)\n",
        "kmeans_model.fit(MD_k4)\n",
        "\n",
        "# Table of cluster assignments\n",
        "table_result = {\n",
        "    'kmeans': kmeans_model.labels_,\n",
        "    'mixture': mixture_model.predict(MD_x)\n",
        "}\n",
        "\n",
        "print(table_result)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 806
        },
        "id": "i3bwPSSKl7MA",
        "outputId": "2bd6ae41-1111-4c54-8820-e06fff95c9f6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'kmeans': array([1, 3, 3, ..., 3, 0, 2], dtype=int32), 'mixture': array([1, 3, 3, ..., 1, 1, 3])}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "# Assuming 'mcdonalds' is the DataFrame containing the 'Like' variable\n",
        "\n",
        "# Remove non-numeric values from the 'Like' column\n",
        "mcdonalds['Like'] = mcdonalds['Like'].str.replace('[^0-9-]', '', regex=True)\n",
        "\n",
        "# Reverse the frequency table\n",
        "freq_table_rev = mcdonalds['Like'].value_counts().sort_index(ascending=False)\n",
        "\n",
        "print(freq_table_rev)\n",
        "\n",
        "# Create the 'Like.n' variable\n",
        "mcdonalds['Like.n'] = 6 - pd.to_numeric(mcdonalds['Like'])\n",
        "\n",
        "# Create the frequency table for 'Like.n'\n",
        "freq_table_like_n = mcdonalds['Like.n'].value_counts().sort_index()\n",
        "\n",
        "print(freq_table_like_n)\n",
        "\n",
        "# Create the formula for regression model\n",
        "variable_names = mcdonalds.columns[1:12]  # Assuming the independent variables start from column index 1\n",
        "f = 'Like.n ~ ' + ' + '.join(variable_names)\n",
        "\n",
        "# Create the formula object\n",
        "print(f)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qnD50Mc0md2_",
        "outputId": "025b6415-1d94-4c2f-e01c-8878e17abba9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5     143\n",
            "4     160\n",
            "3     229\n",
            "2     187\n",
            "1     152\n",
            "0     169\n",
            "-5    152\n",
            "-4     71\n",
            "-3     73\n",
            "-2     59\n",
            "-1     58\n",
            "Name: Like, dtype: int64\n",
            "1     143\n",
            "2     160\n",
            "3     229\n",
            "4     187\n",
            "5     152\n",
            "6     169\n",
            "7      58\n",
            "8      59\n",
            "9      73\n",
            "10     71\n",
            "11    152\n",
            "Name: Like.n, dtype: int64\n",
            "Like.n ~ convenient + spicy + fattening + greasy + fast + cheap + tasty + expensive + healthy + disgusting + Like\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from scipy.spatial.distance import pdist, squareform\n",
        "from scipy.cluster.hierarchy import dendrogram, linkage\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# Assuming 'MD.x' is the data matrix\n",
        "\n",
        "# Perform hierarchical clustering\n",
        "dist_matrix = pdist(np.transpose(MD_x))\n",
        "linkage_matrix = linkage(dist_matrix, method='average')\n",
        "dendrogram(linkage_matrix)\n",
        "plt.title('Hierarchical Clustering Dendrogram')\n",
        "plt.xlabel('Segments')\n",
        "plt.ylabel('Distance')\n",
        "plt.show()\n",
        "\n",
        "# Get the ordering of segmentation variables from the hierarchical clustering\n",
        "segment_order = linkage_matrix[:, [0, 1]].astype(int)\n",
        "\n",
        "# Reorder the segment order in descending order\n",
        "segment_order = segment_order[::-1]\n",
        "\n",
        "# Assuming 'MD.k4' is the clustering result with 4 segments\n",
        "shade_variables = ['Variable1', 'Variable2']  # Example list of marker variables to be highlighted\n",
        "\n",
        "# Plot the segment profile plot with highlighted marker variables\n",
        "plt.figure(figsize=(10, 6))\n",
        "for segment in range(4):\n",
        "    segment_profile = MD_x[segment]\n",
        "    color = 'blue'\n",
        "    if segment_profile in shade_variables:\n",
        "        color = 'red'\n",
        "    plt.bar(range(len(segment_profile)), segment_profile, color=color)\n",
        "plt.xlabel('Segment Variables')\n",
        "plt.ylabel('Segment Profile')\n",
        "plt.title('Segment Profile Plot')\n",
        "plt.xticks(range(len(segment_order)), segment_order)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "xwUua60XqTnj",
        "outputId": "818f67be-7eca-4b92-edf6-68db937f8283"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-87-fbbf608cb315>:33: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison\n",
            "  if segment_profile in shade_variables:\n",
            "/usr/local/lib/python3.10/dist-packages/matplotlib/text.py:1279: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison\n",
            "  if s != self._text:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA04AAAIjCAYAAAA0vUuxAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABRh0lEQVR4nO3dd1zV9f////sRZCjDgYIDxTJnjly8tVyF4sjV0NREzZF9cyTlO6kUtUzNHA3Td6ViU623me80R47UsDQNta2GYipuQRyg8Pr90Y/z6cR4nQMHDsjterlwuXhe5/V6vh6vxxly57UshmEYAgAAAADkqJSrCwAAAACAoo7gBAAAAAAmCE4AAAAAYILgBAAAAAAmCE4AAAAAYILgBAAAAAAmCE4AAAAAYILgBAAAAAAmCE4AAAAAYILgBABAAbl586b+/e9/Kzg4WKVKlVLv3r0lSRaLRVOmTLHOFxMTI4vFoqNHjxZqfUePHpXFYlFMTEyhrhcAiiOCEwAUQwcPHtRDDz2kmjVrysvLS9WqVVOnTp30xhtvuLq0Qnfy5ElNmTJFcXFxds2fGVIyf7y8vFSnTh2NHj1ap0+fdmptS5Ys0ezZs/XQQw9p2bJlGj9+vFPHz8m2bdtstrF06dK67bbbFBERoT/++MMp64iNjdWUKVN06dIlp4wHAEWdu6sLAAA4JjY2Vh07dlSNGjU0YsQIBQUF6fjx4/r222/12muvacyYMa4usVCdPHlSU6dOVUhIiJo2bWr3ctOmTVOtWrV0/fp17dy5UwsXLtS6dev0448/qkyZMk6pbcuWLapWrZrmzZtnM/3atWtydy/4/4LHjh2rli1b6saNG9q3b5/efvttrV27VgcPHlTVqlXzNXZsbKymTp2qIUOGqFy5cs4pGACKMIITABQz06dPl7+/v/bs2ZPlF9YzZ864pqhiqGvXrmrRooUkafjw4apYsaLmzp2rzz//XP379892mStXrqhs2bJ2r+PMmTPZhgovL6881eyotm3b6qGHHpIkDR06VHXq1NHYsWO1bNkyRUVFFUoNAHCr4FA9AChmjhw5ooYNG2b7C3nlypWzTPvggw/UvHlzeXt7q0KFCnrkkUd0/PjxLPMtWLBAt912m7y9vdWqVSvt2LFDHTp0UIcOHazzZB4CtnLlSk2dOlXVqlWTr6+vHnroISUlJSk1NVVPPfWUKleuLB8fHw0dOlSpqal5qqlDhw6688479fPPP6tjx44qU6aMqlWrpldeecWmnpYtW0r6KxhkHpqWl3N27r33XklSfHy8JGnIkCHy8fHRkSNH1K1bN/n6+mrgwIGS/gpQTz/9tIKDg+Xp6am6devq1VdflWEYkv7v3KGtW7fqp59+sta1bds2SVnPccrJl19+qbZt26ps2bLy9fVV9+7d9dNPPzm8bTltY062bNliXW+5cuXUq1cv/fLLL9bnp0yZogkTJkiSatWqZd2+wj5HCwAKE3ucAKCYqVmzpnbt2qUff/xRd955Z67zTp8+XZMmTVLfvn01fPhwnT17Vm+88YbatWunH374wRq+Fi5cqNGjR6tt27YaP368jh49qt69e6t8+fKqXr16lnFnzJghb29vTZw4UYcPH9Ybb7yh0qVLq1SpUrp48aKmTJmib7/9VjExMapVq5YmT57scE2SdPHiRXXp0kUPPPCA+vbtq08//VTPPvusGjVqpK5du6p+/fqaNm2aJk+erJEjR6pt27aSpDZt2jjc1yNHjkiSKlasaJ128+ZNhYeH65577tGrr76qMmXKyDAM9ezZU1u3btWwYcPUtGlTbdiwQRMmTNCJEyc0b948VapUSe+//76mT5+ulJQUzZgxQ5JUv359u+t5//33NXjwYIWHh2vWrFm6evWqFi5cqHvuuUc//PCDQkJCnLKN//TVV1+pa9euuu222zRlyhRdu3ZNb7zxhu6++27t27dPISEheuCBB/T777/r448/1rx58xQQECBJqlSpksM1AUCxYQAAipWNGzcabm5uhpubm9G6dWvj3//+t7FhwwYjLS3NZr6jR48abm5uxvTp022mHzx40HB3d7dOT01NNSpWrGi0bNnSuHHjhnW+mJgYQ5LRvn1767StW7cakow777zTZn39+/c3LBaL0bVrV5t1tW7d2qhZs6bDNRmGYbRv396QZLz33nvWaampqUZQUJDx4IMPWqft2bPHkGQsXbrUpHN/Wbp0qSHJ+Oqrr4yzZ88ax48fN5YvX25UrFjR8Pb2Nv7880/DMAxj8ODBhiRj4sSJNsuvXr3akGS89NJLNtMfeughw2KxGIcPH7bZhoYNG2apQZIRHR2dpab4+HjDMAzj8uXLRrly5YwRI0bYLJeYmGj4+/tnmf5Pma/TkiVLjLNnzxonT540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EJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwATBCQAAAABMEJwAAAAAwITLg9OCBQsUEhIiLy8vhYaGavfu3bnOP3/+fNWtW1fe3t4KDg7W+PHjdf369UKqFgAAAEBJ5NLgtGLFCkVGRio6Olr79u1TkyZNFB4erjNnzmQ7/0cffaSJEycqOjpav/zyixYvXqwVK1boueeeK+TKAQAAAJQkLg1Oc+fO1YgRIzR06FA1aNBAixYtUpkyZbRkyZJs54+NjdXdd9+tAQMGKCQkRJ07d1b//v1N91IBAAAAQH64LDilpaVp7969CgsL+79iSpVSWFiYdu3ale0ybdq00d69e61B6Y8//tC6devUrVu3HNeTmpqq5ORkmx8AAAAAcIS7q1Z87tw5paenKzAw0GZ6YGCgfv3112yXGTBggM6dO6d77rlHhmHo5s2bGjVqVK6H6s2YMUNTp051au0AAAAAShaXXxzCEdu2bdPLL7+st956S/v27dOqVau0du1avfjiizkuExUVpaSkJOvP8ePHC7FiAAAAALcCl+1xCggIkJubm06fPm0z/fTp0woKCsp2mUmTJmnQoEEaPny4JKlRo0a6cuWKRo4cqeeff16lSmXNgZ6envL09HT+BgAAAAAoMVy2x8nDw0PNmzfX5s2brdMyMjK0efNmtW7dOttlrl69miUcubm5SZIMwyi4YgEAAACUaC7b4yRJkZGRGjx4sFq0aKFWrVpp/vz5unLlioYOHSpJioiIULVq1TRjxgxJUo8ePTR37lzdddddCg0N1eHDhzVp0iT16NHDGqAAAAAAwNlcGpz69euns2fPavLkyUpMTFTTpk21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0LBhw7Rnzx516tRJAQEB8vf3V/v27bVv3z6b+S0WixYuXKiePXuqbNmymj59epZD9c6fP6/+/furWrVqKlOmjBo1aqSPP/44S003b97U6NGj5e/vr4CAAE2aNEm53bPe7HXav3+/OnbsKF9fX/n5+al58+b6/vvvcxwPAGCL4AQAJZSPj498fHy0evVqpaam5jjfww8/rDNnzujLL7/U3r171axZM9133326cOGCJOnDDz/U9OnTNWvWLO3du1c1atTQwoULs4yzZcsWnTx5Utu3b9fcuXMVHR2t+++/X+XLl9d3332nUaNG6fHHH9eff/4p6a+9NeHh4fL19dWOHTv0zTffyMfHR126dFFaWpp13K1bt+rIkSPaunWrli1bppiYGMXExEiSVq1aperVq2vatGk6deqUTp06le02NmrUSC1bttSSJUtspi9dulRt2rRRvXr1dPnyZQ0ePFg7d+7Ut99+qzvuuEPdunXT5cuXbZaZMmWK+vTpo4MHD+qxxx7Lsq7r16+refPmWrt2rX788UeNHDlSgwYN0u7du23mW7Zsmdzd3bV792699tprmjt3rt599908v04DBw5U9erVtWfPHu3du1cTJ07M0140ACixDABAifXpp58a5cuXN7y8vIw2bdoYUVFRxv79+63P79ixw/Dz8zOuX79us9ztt99u/Oc//zEMwzBCQ0ONJ5980ub5u+++22jSpIn18eDBg42aNWsa6enp1ml169Y12rZta3188+ZNo2zZssbHH39sGIZhvP/++0bdunWNjIwM6zypqamGt7e3sWHDBptxb968aZ3n4YcfNvr162d9XLNmTWPevHmmvVi0aJHh4+NjXL582TAMw0hOTjbKlCljvPvuu9nOn56ebvj6+hr/+9//rNMkGU899ZTNfFu3bjUkGRcvXsxx3d27dzeefvpp6+P27dsb9evXt9n2Z5991qhfv36222XP6+Tr62vExMTk0gEAQG7Y4wQAJdiDDz6okydPas2aNerSpYu2bdumZs2aWffY7N+/XykpKapYsaJ1D5WPj4/i4+N15MgRSdJvv/2mVq1a2Yz7z8eS1LBhQ5Uq9X//7QQGBqpRo0bWx25ubqpYsaLOnDljXffhw4fl6+trXW+FChV0/fp167ozx3Vzc7M+rlKlinUMR/Tv31/p6elauXKlJGnFihUqVaqU+vXrJ0k6ffq0RowYoTvuuEP+/v7y8/NTSkqKEhISbMZp0aJFrutJT0/Xiy++qEaNGqlChQry8fHRhg0bsozzr3/9y+bQwtatW+vQoUNKT0/PMqY9r1NkZKSGDx+usLAwzZw506aHAABz7q4uAADgWl5eXurUqZM6deqkSZMmafjw4YqOjtaQIUOUkpKiKlWqaNu2bVmWK1eunEPr+edhYRaLJdtpGRkZkqSUlBQ1b95cH374YZaxKlWqlOu4mWM4ws/PTw899JCWLl2qxx57TEuXLlXfvn3l4+MjSRo8eLDOnz+v1157TTVr1pSnp6dat25tc9igJJUtWzbX9cyePVuvvfaa5s+fr0aNGqls2bJ66qmnsozjCHtepylTpmjAgAFau3atvvzyS0VHR2v58uXq06dPntcLACUJwQkAYKNBgwZavXq1JKlZs2ZKTEyUu7u7QkJCsp2/bt262rNnjyIiIqzT9uzZk+86mjVrphUrVqhy5cry8/PL8zgeHh7Z7qXJzrBhw9ShQwd98cUXio2N1ezZs63PffPNN3rrrbfUrVs3SX9duOLcuXMO1/PNN9+oV69eevTRRyVJGRkZ+v3339WgQQOb+b777jubx5nnVf1971ome14nSapTp47q1Kmj8ePHq3///lq6dCnBCQDsxKF6AFBCnT9/Xvfee68++OADHThwQPHx8frkk0/0yiuvqFevXpKksLAwtW7dWr1799bGjRt19OhRxcbG6vnnn7dekW3MmDFavHixli1bpkOHDumll17SgQMH8n357YEDByogIEC9evXSjh07FB8fr23btmns2LHWC0jYIyQkRNu3b9eJEydMg067du1Uu3ZtRUREqF69emrTpo31uTvuuEPvv/++fvnlF3333XcaOHCgvL29Hd6uO+64Q5s2bVJsbKx++eUXPf744zp9+nSW+RISEhQZGanffvtNH3/8sd544w2NGzcu2zHNXqdr165p9OjR2rZtm44dO6ZvvvlGe/bsUf369R2uHwBKKoITAJRQPj4+Cg0N1bx589SuXTvdeeedmjRpkkaMGKE333xT0l+Hva1bt07t2rXT0KFDVadOHT3yyCM6duyYAgMDJf0VcKKiovTMM8+oWbNmio+P15AhQ+Tl5ZWv+sqUKaPt27erRo0aeuCBB1S/fn0NGzZM169fd2gP1LRp03T06FHdfvvtNof4Zcdiseixxx7TxYsXs1wRb/Hixbp48aKaNWumQYMGaezYsapcubLD2/XCCy+oWbNmCg8PV4cOHRQUFKTevXtnmS8iIkLXrl1Tq1at9OSTT2rcuHEaOXJkjnXn9jq5ubnp/PnzioiIUJ06ddS3b1917dpVU6dOdbh+ACipLIaRy00hAADIg06dOikoKEjvv/++q0sBAMApOMcJAJAvV69e1aJFixQeHi43Nzd9/PHH+uqrr7Rp0yZXlwYAgNOwxwkAkC/Xrl1Tjx499MMPP+j69euqW7euXnjhBT3wwAOuLg0AAKchOAEAAACACS4OAQAAAAAmCE4AAAAAYILgBAAAAAAmCE4AAAAAYILgBAAAAAAmCE4AAAAAYILgBAAAAAAmCE4AAAAAYOL/A9m85zeMsDrZAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.decomposition import PCA\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# Assuming 'MD.x' is the data matrix\n",
        "# Assuming 'MD.k4' is the clustering result with 4 segments\n",
        "\n",
        "# Perform PCA on the data\n",
        "scaler = StandardScaler()\n",
        "X_scaled = scaler.fit_transform(MD_x)\n",
        "pca = PCA(n_components=2)\n",
        "MD_pca = pca.fit_transform(X_scaled)\n",
        "\n",
        "# Plot the clustering result projected onto the principal components\n",
        "plt.figure(figsize=(10, 6))\n",
        "for segment in range(4):\n",
        "    segment_indices = np.where(MD_x == segment)[0]\n",
        "    plt.scatter(MD_pca[segment_indices, 0], MD_pca[segment_indices, 1], label=f\"Segment {segment+1}\")\n",
        "plt.xlabel('Principal Component 1')\n",
        "plt.ylabel('Principal Component 2')\n",
        "plt.title('Clustering Result Projected onto Principal Components')\n",
        "plt.legend()\n",
        "plt.show()\n",
        "\n",
        "# Calculate the projection axes\n",
        "proj_axes = pca.components_\n",
        "\n",
        "# Print the projection axes\n",
        "print('Projection Axes:')\n",
        "print(proj_axes)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 656
        },
        "id": "8Eg7Zd1WvkDU",
        "outputId": "aece7b4b-3434-4f5c-d1f5-d71489fedf84"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Projection Axes:\n",
            "[[-0.40695508 -0.30882741 -0.02332033  0.17786071  0.26779582 -0.21303906\n",
            "  -0.28913434 -0.42611499  0.29094445 -0.26683857  0.41074387]\n",
            " [ 0.28261487 -0.04568172  0.0699822  -0.20559024 -0.13630029 -0.28244059\n",
            "  -0.57503178  0.24219851  0.56752776  0.20103082 -0.14388846]]\n"
          ]
        }
      ]
    }
  ]
}